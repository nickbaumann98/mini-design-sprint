{"ast":null,"code":"export const getGPTResponse = async (prompt, day, objectives) => {\n  console.log('Starting getGPTResponse');\n  console.log('Prompt:', prompt);\n  console.log('Day:', day);\n  console.log('Objectives:', objectives);\n  try {\n    const response = await fetch('/.netlify/functions/openai-proxy', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt,\n        day,\n        objectives\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data.choices[0].message.content;\n  } catch (error) {\n    console.error('Error in getGPTResponse:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["getGPTResponse","prompt","day","objectives","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","choices","message","content","error"],"sources":["/Users/nickbaumann/Develop/mini-design-sprint/src/utils/gptService.js"],"sourcesContent":["export const getGPTResponse = async (prompt, day, objectives) => {\n    console.log('Starting getGPTResponse');\n    console.log('Prompt:', prompt);\n    console.log('Day:', day);\n    console.log('Objectives:', objectives);\n\n    try {\n        const response = await fetch('/.netlify/functions/openai-proxy', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ prompt, day, objectives })\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        return data.choices[0].message.content;\n    } catch (error) {\n        console.error('Error in getGPTResponse:', error);\n        throw error;\n    }\n};"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,MAAAA,CAAOC,MAAM,EAAEC,GAAG,EAAEC,UAAU,KAAK;EAC7DC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACtCD,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEJ,MAAM,CAAC;EAC9BG,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEH,GAAG,CAAC;EACxBE,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,UAAU,CAAC;EAEtC,IAAI;IACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX,MAAM;QAAEC,GAAG;QAAEC;MAAW,CAAC;IACpD,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;IAC7D;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACC,OAAO;EAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZjB,OAAO,CAACiB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}