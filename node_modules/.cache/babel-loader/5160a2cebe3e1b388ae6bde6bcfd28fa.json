{"ast":null,"code":"var _jsxFileName = \"/Users/nickbaumann/Develop/mini-design-sprint/src/components/DaySprint.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { getGPTResponse } from '../utils/gptService';\nimport { sprintGuidance } from '../utils/sprintResources';\nimport OutputSidebar from './OutputSidebar';\nimport InputWithSendIcon from './InputWithSendIcon';\nconst SprintContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: #121212;\n  color: #e0e0e0;\n`;\nconst MainContent = styled.div`\n  flex: 1;\n  padding: 2rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n`;\nconst Header = styled.h1`\n  color: #3c8ce7;\n  font-size: 2.5rem;\n  margin-bottom: 20px;\n`;\nconst AIMessage = styled.div`\n  background-color: #2a2a2a;\n  color: #e0e0e0;\n  padding: 15px;\n  border-radius: 15px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  position: relative;\n  max-width: 80%;\n  align-self: flex-start;\n`;\nconst RelayIcon = styled.span`\n  font-weight: bold;\n  color: #3c8ce7;\n  margin-right: 5px;\n`;\nconst typing = keyframes`\n  0% { opacity: 0.3; }\n  50% { opacity: 1; }\n  100% { opacity: 0.3; }\n`;\nconst TypingIndicator = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 30px;\n  margin-bottom: 20px;\n\n  span {\n    height: 10px;\n    width: 10px;\n    margin: 0 2px;\n    background-color: #3c8ce7;\n    border-radius: 50%;\n    display: inline-block;\n    animation: ${typing} 1s infinite;\n\n    &:nth-child(2) {\n      animation-delay: 0.2s;\n    }\n\n    &:nth-child(3) {\n      animation-delay: 0.4s;\n    }\n  }\n`;\nconst NextDayButton = styled.button`\n  background-color: #3c8ce7;\n  color: #ffffff;\n  border: none;\n  padding: 10px 20px;\n  font-size: 1rem;\n  cursor: pointer;\n  border-radius: 5px;\n  margin-top: 20px;\n  align-self: flex-start;\n`;\nconst ConversationLog = styled.div`\n  margin-top: 2rem;\n  padding: 1rem;\n  background-color: #2a2a2a;\n  border-radius: 5px;\n  max-height: 300px;\n  overflow-y: auto;\n`;\nconst LogEntry = styled.div`\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  background-color: ${props => props.isUser ? '#3c8ce7' : '#1e1e1e'};\n  border-radius: 5px;\n  color: ${props => props.isUser ? '#ffffff' : '#e0e0e0'};\n`;\nconst CopyButton = styled.button`\n  background-color: #3c8ce7;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-bottom: 1rem;\n`;\nconst Timer = styled.div`\n  font-size: 2rem;\n  text-align: center;\n  margin: 1rem 0;\n`;\nconst CrazyEightContainer = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n  background-color: #2a2a2a;\n  border-radius: 5px;\n`;\nconst CrazyEightInstructions = styled.p`\n  margin-bottom: 1rem;\n  color: #e0e0e0;\n`;\nconst CrazyEightInput = styled.input`\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 0.5rem;\n  border: 1px solid #3c8ce7;\n  border-radius: 5px;\n`;\nconst StoryboardContainer = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n  background-color: #2a2a2a;\n  border-radius: 5px;\n`;\nconst StoryboardInstructions = styled.p`\n  margin-bottom: 1rem;\n  color: #e0e0e0;\n`;\nconst StoryboardSection = styled.textarea`\n  width: 100%;\n  height: 150px;\n  margin-top: 1rem;\n  padding: 0.5rem;\n  border-radius: 5px;\n`;\nconst SubmitButton = styled(CopyButton)`\n  margin-top: 1rem;\n  font-size: 1.2rem;\n  padding: 1rem 2rem;\n`;\nconst PrototypeSection = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n  background-color: #2a2a2a;\n  border-radius: 5px;\n`;\nconst InteractionSection = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n  background-color: #2a2a2a;\n  border-radius: 5px;\n`;\nconst AskQuestionButton = styled.button`\n  background-color: #3c8ce7;\n  color: #ffffff;\n  border: none;\n  padding: 10px 20px;\n  font-size: 1rem;\n  cursor: pointer;\n  border-radius: 5px;\n  margin-top: 20px;\n`;\nconst ToggleSidebarButton = styled.button`\n  background-color: #3c8ce7;\n  color: #ffffff;\n  border: none;\n  padding: 10px 20px;\n  font-size: 1rem;\n  cursor: pointer;\n  border-radius: 5px;\n  margin-top: 20px;\n  align-self: flex-start;\n`;\nconst DaySprint = () => {\n  const [currentDay, setCurrentDay] = useState(1);\n  const [input, setInput] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [sprintData, setSprintData] = useState({});\n  const [isTyping, setIsTyping] = useState(false);\n  const [conversationLog, setConversationLog] = useState([]);\n  const [timerSeconds, setTimerSeconds] = useState(480); // 8 minutes\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [crazyEightIdeas, setCrazyEightIdeas] = useState(Array(8).fill(''));\n  const [storyboardSections, setStoryboardSections] = useState(['', '', '']);\n  const [isReadyForNextDay, setIsReadyForNextDay] = useState(false);\n  const [prototypeData, setPrototypeData] = useState({\n    coreElements: '',\n    structureFlow: '',\n    interactionsProcesses: ''\n  });\n  const [testingScenario, setTestingScenario] = useState('');\n  const [userInteraction, setUserInteraction] = useState('');\n  const [analysisNotes, setAnalysisNotes] = useState('');\n  const [showQuestionInput, setShowQuestionInput] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const getCurrentPrompt = useCallback(() => sprintGuidance[currentDay].prompt, [currentDay]);\n  const getCurrentObjectives = useCallback(() => sprintGuidance[currentDay].objectives, [currentDay]);\n  const moveToNextDay = useCallback(() => {\n    setCurrentDay(prev => {\n      const nextDay = Math.min(prev + 1, 5);\n      setFeedback('');\n      setIsReadyForNextDay(false);\n      if (prev === 2) {\n        setCrazyEightIdeas(Array(8).fill(''));\n      } else if (prev === 3) {\n        setStoryboardSections(['', '', '']);\n      }\n      setIsTimerRunning(false);\n      setTimerSeconds(480);\n      return nextDay;\n    });\n  }, []);\n  const checkDayCompletion = useCallback(() => {\n    var _sprintData$, _sprintData$2;\n    let isComplete = false;\n    switch (currentDay) {\n      case 1:\n        isComplete = ((_sprintData$ = sprintData[1]) === null || _sprintData$ === void 0 ? void 0 : _sprintData$[\"Long-term Goal\"]) && ((_sprintData$2 = sprintData[1]) === null || _sprintData$2 === void 0 ? void 0 : _sprintData$2[\"Critical Questions\"]);\n        break;\n      case 2:\n        isComplete = crazyEightIdeas.every(idea => idea.trim() !== '');\n        break;\n      case 3:\n        isComplete = storyboardSections.every(section => section.trim() !== '');\n        break;\n      case 4:\n        isComplete = Object.values(prototypeData).every(value => value.trim() !== '');\n        break;\n      case 5:\n        isComplete = testingScenario.trim() !== '' && userInteraction.trim() !== '' && analysisNotes.trim() !== '';\n        break;\n      default:\n        isComplete = false;\n    }\n    setIsReadyForNextDay(isComplete);\n  }, [currentDay, sprintData, crazyEightIdeas, storyboardSections, prototypeData, testingScenario, userInteraction, analysisNotes]);\n  useEffect(() => {\n    let interval;\n    if (isTimerRunning && timerSeconds > 0) {\n      interval = setInterval(() => {\n        setTimerSeconds(seconds => seconds - 1);\n      }, 1000);\n    } else if (timerSeconds === 0) {\n      setIsTimerRunning(false);\n    }\n    return () => clearInterval(interval);\n  }, [isTimerRunning, timerSeconds]);\n  const getInitialPrompt = useCallback(() => {\n    if (currentDay === 1) {\n      return sprintGuidance[currentDay].prompt;\n    }\n    return `Welcome to Day ${currentDay} of the Design Sprint. ${sprintGuidance[currentDay].prompt}`;\n  }, [currentDay]);\n  useEffect(() => {\n    const initialPrompt = getInitialPrompt();\n    setIsTyping(true);\n    getGPTResponse(initialPrompt).then(response => {\n      setFeedback(response);\n      setIsTyping(false);\n      setConversationLog([{\n        isUser: false,\n        text: response\n      }]);\n    });\n  }, [currentDay, getInitialPrompt]);\n  const getAIFeedback = async (input, context) => {\n    setIsTyping(true);\n    const prompt = `Day ${currentDay} of Design Sprint. Context: ${context}. User input: \"${input}\". ${getCurrentPrompt()} Provide encouraging feedback and guidance based on the user's input. Suggest improvements or ask thought-provoking questions to help the user develop their ideas further.`;\n    try {\n      const response = await getGPTResponse(prompt);\n      setFeedback(response);\n      setConversationLog(prev => [...prev, {\n        isUser: false,\n        text: response\n      }]);\n    } catch (error) {\n      console.error(\"Error getting AI feedback:\", error);\n      setFeedback(\"I'm having trouble providing feedback right now. Please try again.\");\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const handleSubmit = async () => {\n    if (!input.trim()) return;\n    const userInput = input;\n    setInput('');\n    setIsTyping(true);\n    setConversationLog(prev => [...prev, {\n      isUser: true,\n      text: userInput\n    }]);\n    let updatedSprintData = {\n      ...sprintData\n    };\n    if (currentDay === 1) {\n      var _updatedSprintData$, _updatedSprintData$2;\n      if (!((_updatedSprintData$ = updatedSprintData[1]) === null || _updatedSprintData$ === void 0 ? void 0 : _updatedSprintData$[\"Long-term Goal\"])) {\n        updatedSprintData[1] = {\n          ...updatedSprintData[1],\n          \"Long-term Goal\": userInput\n        };\n      } else if (!((_updatedSprintData$2 = updatedSprintData[1]) === null || _updatedSprintData$2 === void 0 ? void 0 : _updatedSprintData$2[\"Critical Questions\"])) {\n        updatedSprintData[1] = {\n          ...updatedSprintData[1],\n          \"Critical Questions\": userInput\n        };\n      }\n    } else {\n      const currentObjectives = getCurrentObjectives();\n      const currentObjective = currentObjectives[Object.keys(updatedSprintData[currentDay] || {}).length];\n      if (currentObjective) {\n        updatedSprintData[currentDay] = {\n          ...updatedSprintData[currentDay],\n          [currentObjective]: userInput\n        };\n      }\n    }\n    setSprintData(updatedSprintData);\n    const prompt = `Day ${currentDay} of Design Sprint. Context: ${JSON.stringify(updatedSprintData)}. User input: \"${userInput}\". ${getCurrentPrompt()} Provide concise guidance (2-3 sentences max) based on the user's input.`;\n    try {\n      const response = await getGPTResponse(prompt);\n      setFeedback(response);\n      setConversationLog(prev => [...prev, {\n        isUser: false,\n        text: response\n      }]);\n    } catch (error) {\n      console.error(\"Error getting AI response:\", error);\n      setFeedback(\"I'm having trouble providing feedback right now. Please try again.\");\n    } finally {\n      setIsTyping(false);\n    }\n    checkDayCompletion();\n  };\n  const updateCrazyEightIdea = async (index, value) => {\n    const newIdeas = [...crazyEightIdeas];\n    newIdeas[index] = value;\n    setCrazyEightIdeas(newIdeas);\n    await getAIFeedback(value, `Updating Crazy 8s idea ${index + 1}`);\n  };\n  const updateStoryboardSection = async (index, value) => {\n    const newSections = [...storyboardSections];\n    newSections[index] = value;\n    setStoryboardSections(newSections);\n    await getAIFeedback(value, `Updating storyboard panel ${index + 1}`);\n    checkDayCompletion();\n  };\n  const updatePrototypeData = async (key, value) => {\n    setPrototypeData(prev => ({\n      ...prev,\n      [key]: value\n    }));\n    await getAIFeedback(value, `Updating prototype ${key}`);\n    checkDayCompletion();\n  };\n  const submitDay2 = useCallback(() => {\n    if (crazyEightIdeas.every(idea => idea.trim() !== '')) {\n      setSprintData(prev => ({\n        ...prev,\n        2: {\n          \"Crazy 8s\": crazyEightIdeas\n        }\n      }));\n      moveToNextDay();\n    } else {\n      alert(\"Please complete all 8 ideas before submitting.\");\n    }\n  }, [crazyEightIdeas, moveToNextDay]);\n  const submitDay3 = useCallback(() => {\n    if (storyboardSections.every(section => section.trim() !== '')) {\n      setSprintData(prev => ({\n        ...prev,\n        3: {\n          \"Solution Sketch\": storyboardSections.map((section, index) => `Panel ${index + 1}: ${section}`)\n        }\n      }));\n      moveToNextDay();\n    } else {\n      alert(\"Please complete all three storyboard panels before submitting.\");\n    }\n  }, [storyboardSections, moveToNextDay]);\n  const submitDay4 = useCallback(() => {\n    if (Object.values(prototypeData).every(value => value.trim() !== '')) {\n      setSprintData(prev => ({\n        ...prev,\n        4: prototypeData\n      }));\n      moveToNextDay();\n    } else {\n      alert(\"Please complete all prototype sections before submitting.\");\n    }\n  }, [prototypeData, moveToNextDay]);\n  const submitDay5 = useCallback(() => {\n    if (testingScenario.trim() !== '' && userInteraction.trim() !== '' && analysisNotes.trim() !== '') {\n      setSprintData(prev => ({\n        ...prev,\n        5: {\n          \"Testing Scenario\": testingScenario,\n          \"User Interaction\": userInteraction,\n          \"Analysis\": analysisNotes\n        }\n      }));\n      moveToNextDay();\n    } else {\n      alert(\"Please complete all sections before submitting.\");\n    }\n  }, [testingScenario, userInteraction, analysisNotes, moveToNextDay]);\n  const startTimer = () => {\n    setIsTimerRunning(true);\n    setTimerSeconds(480);\n  };\n  const copyConversationLog = () => {\n    const logText = conversationLog.map(entry => `**${entry.isUser ? 'User' : 'Relay'}**: ${entry.text}`).join('\\n');\n    navigator.clipboard.writeText(logText);\n  };\n  const conductSimulatedInteraction = async () => {\n    setIsTyping(true);\n    const prompt = `You are a potential user interacting with the following product prototype: ${JSON.stringify(prototypeData)}. Please provide realistic responses and actions based on this testing scenario: ${testingScenario}`;\n    try {\n      const response = await getGPTResponse(prompt);\n      setUserInteraction(response);\n      await getAIFeedback(response, \"Simulated user interaction\");\n    } catch (error) {\n      console.error(\"Error conducting simulated interaction:\", error);\n      setUserInteraction(\"Error: Unable to conduct simulated interaction.\");\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(SprintContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToggleSidebarButton, {\n    onClick: () => setIsSidebarOpen(!isSidebarOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }\n  }, isSidebarOpen ? 'Close Sidebar' : 'Open Sidebar'), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 9\n    }\n  }, `Day ${currentDay}: ${sprintGuidance[currentDay].goal}`), isTyping ? /*#__PURE__*/React.createElement(TypingIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }\n  })) : feedback && /*#__PURE__*/React.createElement(AIMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RelayIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 15\n    }\n  }, \"Relay :)\"), \" \", feedback), currentDay === 1 ? /*#__PURE__*/React.createElement(InputWithSendIcon, {\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onSubmit: handleSubmit,\n    onKeyPress: e => e.key === 'Enter' && !e.shiftKey && handleSubmit(),\n    placeholder: \"Enter your response here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, !showQuestionInput && /*#__PURE__*/React.createElement(AskQuestionButton, {\n    onClick: () => setShowQuestionInput(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 15\n    }\n  }, \"Ask a question\"), showQuestionInput && /*#__PURE__*/React.createElement(InputWithSendIcon, {\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onSubmit: handleSubmit,\n    onKeyPress: e => e.key === 'Enter' && !e.shiftKey && handleSubmit(),\n    placeholder: \"Have any questions?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 15\n    }\n  })), isReadyForNextDay && /*#__PURE__*/React.createElement(NextDayButton, {\n    onClick: moveToNextDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 11\n    }\n  }, \"Ready to move to Day \", currentDay + 1, \"?\"), currentDay === 2 && /*#__PURE__*/React.createElement(CrazyEightContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CrazyEightInstructions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 13\n    }\n  }, \"Crazy 8s is a fast sketching exercise where you'll create 8 distinct ideas in 8 minutes. The goal is to push beyond your first idea and generate a wide range of possibilities. Don't worry about quality or feasibility at this stage - focus on quantity and variety!\"), /*#__PURE__*/React.createElement(CopyButton, {\n    onClick: startTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 13\n    }\n  }, \"Start Crazy 8s Timer\"), /*#__PURE__*/React.createElement(Timer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 13\n    }\n  }, Math.floor(timerSeconds / 60), \":\", (timerSeconds % 60).toString().padStart(2, '0')), crazyEightIdeas.map((idea, index) => /*#__PURE__*/React.createElement(CrazyEightInput, {\n    key: index,\n    value: idea,\n    onChange: e => updateCrazyEightIdea(index, e.target.value),\n    placeholder: `Crazy 8s Idea ${index + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 15\n    }\n  })), isReadyForNextDay && /*#__PURE__*/React.createElement(SubmitButton, {\n    onClick: submitDay2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 15\n    }\n  }, \"Submit Crazy 8s and Move to Day 3\")), currentDay === 3 && /*#__PURE__*/React.createElement(StoryboardContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StoryboardInstructions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 13\n    }\n  }, \"Create a three-panel storyboard that outlines your chosen solution. Each panel should represent a key step or moment in your solution: 1. The problem or starting point 2. The main action or change 3. The result or outcome Describe each panel in detail, focusing on what the user sees and does.\"), storyboardSections.map((section, index) => /*#__PURE__*/React.createElement(StoryboardSection, {\n    key: index,\n    value: section,\n    onChange: e => updateStoryboardSection(index, e.target.value),\n    placeholder: `Describe panel ${index + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 15\n    }\n  })), isReadyForNextDay && /*#__PURE__*/React.createElement(SubmitButton, {\n    onClick: submitDay3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 15\n    }\n  }, \"Submit Storyboard and Move to Day 4\")), currentDay === 4 && /*#__PURE__*/React.createElement(PrototypeSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 13\n    }\n  }, \"Design Your Conceptual Prototype\"), /*#__PURE__*/React.createElement(StoryboardSection, {\n    value: prototypeData.coreElements,\n    onChange: e => updatePrototypeData('coreElements', e.target.value),\n    placeholder: \"Describe core elements...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StoryboardSection, {\n    value: prototypeData.structureFlow,\n    onChange: e => updatePrototypeData('structureFlow', e.target.value),\n    placeholder: \"Outline structure or flow...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StoryboardSection, {\n    value: prototypeData.interactionsProcesses,\n    onChange: e => updatePrototypeData('interactionsProcesses', e.target.value),\n    placeholder: \"Detail interactions or processes...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 13\n    }\n  }), isReadyForNextDay && /*#__PURE__*/React.createElement(SubmitButton, {\n    onClick: submitDay4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 15\n    }\n  }, \"Submit Conceptual Prototype and Move to Day 5\")), currentDay === 5 && /*#__PURE__*/React.createElement(InteractionSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 13\n    }\n  }, \"Simulated User/Stakeholder Testing\"), /*#__PURE__*/React.createElement(StoryboardSection, {\n    value: testingScenario,\n    onChange: e => setTestingScenario(e.target.value),\n    placeholder: \"Describe a testing scenario for your prototype...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CopyButton, {\n    onClick: conductSimulatedInteraction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 13\n    }\n  }, \"Simulate User Interaction\"), userInteraction && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 17\n    }\n  }, \"Simulated User Interaction:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 17\n    }\n  }, userInteraction)), /*#__PURE__*/React.createElement(StoryboardSection, {\n    value: analysisNotes,\n    onChange: e => setAnalysisNotes(e.target.value),\n    placeholder: \"Analyze the simulated feedback and consider potential iterations...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 13\n    }\n  }), isReadyForNextDay && /*#__PURE__*/React.createElement(SubmitButton, {\n    onClick: submitDay5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 15\n    }\n  }, \"Submit Testing Results and Complete Sprint\")), currentDay !== 1 && /*#__PURE__*/React.createElement(AskQuestionButton, {\n    onClick: () => setShowQuestionInput(!showQuestionInput),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 11\n    }\n  }, showQuestionInput ? 'Hide Question Input' : 'Ask a Question'), showQuestionInput && currentDay !== 1 && /*#__PURE__*/React.createElement(InputWithSendIcon, {\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onSubmit: handleSubmit,\n    onKeyPress: e => e.key === 'Enter' && !e.shiftKey && handleSubmit(),\n    placeholder: \"Have any questions?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ConversationLog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 11\n    }\n  }, \"Conversation Log (For Development)\"), /*#__PURE__*/React.createElement(CopyButton, {\n    onClick: copyConversationLog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 11\n    }\n  }, \"Copy Log\"), conversationLog.map((entry, index) => /*#__PURE__*/React.createElement(LogEntry, {\n    key: index,\n    isUser: entry.isUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 15\n    }\n  }, entry.isUser ? 'User' : 'Relay'), \": \", entry.text)))), isSidebarOpen && /*#__PURE__*/React.createElement(OutputSidebar, {\n    sprintData: sprintData,\n    currentDay: currentDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 9\n    }\n  }));\n};\nexport default DaySprint;","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","keyframes","getGPTResponse","sprintGuidance","OutputSidebar","InputWithSendIcon","SprintContainer","div","MainContent","Header","h1","AIMessage","RelayIcon","span","typing","TypingIndicator","NextDayButton","button","ConversationLog","LogEntry","props","isUser","CopyButton","Timer","CrazyEightContainer","CrazyEightInstructions","p","CrazyEightInput","input","StoryboardContainer","StoryboardInstructions","StoryboardSection","textarea","SubmitButton","PrototypeSection","InteractionSection","AskQuestionButton","ToggleSidebarButton","DaySprint","currentDay","setCurrentDay","setInput","feedback","setFeedback","sprintData","setSprintData","isTyping","setIsTyping","conversationLog","setConversationLog","timerSeconds","setTimerSeconds","isTimerRunning","setIsTimerRunning","crazyEightIdeas","setCrazyEightIdeas","Array","fill","storyboardSections","setStoryboardSections","isReadyForNextDay","setIsReadyForNextDay","prototypeData","setPrototypeData","coreElements","structureFlow","interactionsProcesses","testingScenario","setTestingScenario","userInteraction","setUserInteraction","analysisNotes","setAnalysisNotes","showQuestionInput","setShowQuestionInput","isSidebarOpen","setIsSidebarOpen","getCurrentPrompt","prompt","getCurrentObjectives","objectives","moveToNextDay","prev","nextDay","Math","min","checkDayCompletion","_sprintData$","_sprintData$2","isComplete","every","idea","trim","section","Object","values","value","interval","setInterval","seconds","clearInterval","getInitialPrompt","initialPrompt","then","response","text","getAIFeedback","context","error","console","handleSubmit","userInput","updatedSprintData","_updatedSprintData$","_updatedSprintData$2","currentObjectives","currentObjective","keys","length","JSON","stringify","updateCrazyEightIdea","index","newIdeas","updateStoryboardSection","newSections","updatePrototypeData","key","submitDay2","alert","submitDay3","map","submitDay4","submitDay5","startTimer","copyConversationLog","logText","entry","join","navigator","clipboard","writeText","conductSimulatedInteraction","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","goal","onChange","e","target","onSubmit","onKeyPress","shiftKey","placeholder","Fragment","floor","toString","padStart"],"sources":["/Users/nickbaumann/Develop/mini-design-sprint/src/components/DaySprint.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { getGPTResponse } from '../utils/gptService';\nimport { sprintGuidance } from '../utils/sprintResources';\nimport OutputSidebar from './OutputSidebar';\nimport InputWithSendIcon from './InputWithSendIcon';\n\nconst SprintContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: #121212;\n  color: #e0e0e0;\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  padding: 2rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.h1`\n  color: #3c8ce7;\n  font-size: 2.5rem;\n  margin-bottom: 20px;\n`;\n\nconst AIMessage = styled.div`\n  background-color: #2a2a2a;\n  color: #e0e0e0;\n  padding: 15px;\n  border-radius: 15px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  position: relative;\n  max-width: 80%;\n  align-self: flex-start;\n`;\n\nconst RelayIcon = styled.span`\n  font-weight: bold;\n  color: #3c8ce7;\n  margin-right: 5px;\n`;\n\nconst typing = keyframes`\n  0% { opacity: 0.3; }\n  50% { opacity: 1; }\n  100% { opacity: 0.3; }\n`;\n\nconst TypingIndicator = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 30px;\n  margin-bottom: 20px;\n\n  span {\n    height: 10px;\n    width: 10px;\n    margin: 0 2px;\n    background-color: #3c8ce7;\n    border-radius: 50%;\n    display: inline-block;\n    animation: ${typing} 1s infinite;\n\n    &:nth-child(2) {\n      animation-delay: 0.2s;\n    }\n\n    &:nth-child(3) {\n      animation-delay: 0.4s;\n    }\n  }\n`;\n\nconst NextDayButton = styled.button`\n  background-color: #3c8ce7;\n  color: #ffffff;\n  border: none;\n  padding: 10px 20px;\n  font-size: 1rem;\n  cursor: pointer;\n  border-radius: 5px;\n  margin-top: 20px;\n  align-self: flex-start;\n`;\n\nconst ConversationLog = styled.div`\n  margin-top: 2rem;\n  padding: 1rem;\n  background-color: #2a2a2a;\n  border-radius: 5px;\n  max-height: 300px;\n  overflow-y: auto;\n`;\n\nconst LogEntry = styled.div`\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  background-color: ${props => props.isUser ? '#3c8ce7' : '#1e1e1e'};\n  border-radius: 5px;\n  color: ${props => props.isUser ? '#ffffff' : '#e0e0e0'};\n`;\n\nconst CopyButton = styled.button`\n  background-color: #3c8ce7;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-bottom: 1rem;\n`;\n\nconst Timer = styled.div`\n  font-size: 2rem;\n  text-align: center;\n  margin: 1rem 0;\n`;\n\nconst CrazyEightContainer = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n  background-color: #2a2a2a;\n  border-radius: 5px;\n`;\n\nconst CrazyEightInstructions = styled.p`\n  margin-bottom: 1rem;\n  color: #e0e0e0;\n`;\n\nconst CrazyEightInput = styled.input`\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 0.5rem;\n  border: 1px solid #3c8ce7;\n  border-radius: 5px;\n`;\n\nconst StoryboardContainer = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n  background-color: #2a2a2a;\n  border-radius: 5px;\n`;\n\nconst StoryboardInstructions = styled.p`\n  margin-bottom: 1rem;\n  color: #e0e0e0;\n`;\n\nconst StoryboardSection = styled.textarea`\n  width: 100%;\n  height: 150px;\n  margin-top: 1rem;\n  padding: 0.5rem;\n  border-radius: 5px;\n`;\n\nconst SubmitButton = styled(CopyButton)`\n  margin-top: 1rem;\n  font-size: 1.2rem;\n  padding: 1rem 2rem;\n`;\n\nconst PrototypeSection = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n  background-color: #2a2a2a;\n  border-radius: 5px;\n`;\n\nconst InteractionSection = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n  background-color: #2a2a2a;\n  border-radius: 5px;\n`;\n\nconst AskQuestionButton = styled.button`\n  background-color: #3c8ce7;\n  color: #ffffff;\n  border: none;\n  padding: 10px 20px;\n  font-size: 1rem;\n  cursor: pointer;\n  border-radius: 5px;\n  margin-top: 20px;\n`;\n\nconst ToggleSidebarButton = styled.button`\n  background-color: #3c8ce7;\n  color: #ffffff;\n  border: none;\n  padding: 10px 20px;\n  font-size: 1rem;\n  cursor: pointer;\n  border-radius: 5px;\n  margin-top: 20px;\n  align-self: flex-start;\n`;\n\nconst DaySprint = () => {\n  const [currentDay, setCurrentDay] = useState(1);\n  const [input, setInput] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [sprintData, setSprintData] = useState({});\n  const [isTyping, setIsTyping] = useState(false);\n  const [conversationLog, setConversationLog] = useState([]);\n  const [timerSeconds, setTimerSeconds] = useState(480); // 8 minutes\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [crazyEightIdeas, setCrazyEightIdeas] = useState(Array(8).fill(''));\n  const [storyboardSections, setStoryboardSections] = useState(['', '', '']);\n  const [isReadyForNextDay, setIsReadyForNextDay] = useState(false);\n  const [prototypeData, setPrototypeData] = useState({ coreElements: '', structureFlow: '', interactionsProcesses: '' });\n  const [testingScenario, setTestingScenario] = useState('');\n  const [userInteraction, setUserInteraction] = useState('');\n  const [analysisNotes, setAnalysisNotes] = useState('');\n  const [showQuestionInput, setShowQuestionInput] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n\n  const getCurrentPrompt = useCallback(() => sprintGuidance[currentDay].prompt, [currentDay]);\n  const getCurrentObjectives = useCallback(() => sprintGuidance[currentDay].objectives, [currentDay]);\n\n  const moveToNextDay = useCallback(() => {\n    setCurrentDay(prev => {\n      const nextDay = Math.min(prev + 1, 5);\n      setFeedback('');\n      setIsReadyForNextDay(false);\n      if (prev === 2) {\n        setCrazyEightIdeas(Array(8).fill(''));\n      } else if (prev === 3) {\n        setStoryboardSections(['', '', '']);\n      }\n      setIsTimerRunning(false);\n      setTimerSeconds(480);\n      return nextDay;\n    });\n  }, []);\n\n  const checkDayCompletion = useCallback(() => {\n    let isComplete = false;\n\n    switch (currentDay) {\n      case 1:\n        isComplete = sprintData[1]?.[\"Long-term Goal\"] && sprintData[1]?.[\"Critical Questions\"];\n        break;\n      case 2:\n        isComplete = crazyEightIdeas.every(idea => idea.trim() !== '');\n        break;\n      case 3:\n        isComplete = storyboardSections.every(section => section.trim() !== '');\n        break;\n      case 4:\n        isComplete = Object.values(prototypeData).every(value => value.trim() !== '');\n        break;\n      case 5:\n        isComplete = testingScenario.trim() !== '' && userInteraction.trim() !== '' && analysisNotes.trim() !== '';\n        break;\n      default:\n        isComplete = false;\n    }\n\n    setIsReadyForNextDay(isComplete);\n  }, [currentDay, sprintData, crazyEightIdeas, storyboardSections, prototypeData, testingScenario, userInteraction, analysisNotes]);\n\n  useEffect(() => {\n    let interval;\n    if (isTimerRunning && timerSeconds > 0) {\n      interval = setInterval(() => {\n        setTimerSeconds(seconds => seconds - 1);\n      }, 1000);\n    } else if (timerSeconds === 0) {\n      setIsTimerRunning(false);\n    }\n    return () => clearInterval(interval);\n  }, [isTimerRunning, timerSeconds]);\n\n  const getInitialPrompt = useCallback(() => {\n    if (currentDay === 1) {\n      return sprintGuidance[currentDay].prompt;\n    }\n    return `Welcome to Day ${currentDay} of the Design Sprint. ${sprintGuidance[currentDay].prompt}`;\n  }, [currentDay]);\n  \n\n  useEffect(() => {\n    const initialPrompt = getInitialPrompt();\n    setIsTyping(true);\n    getGPTResponse(initialPrompt).then(response => {\n      setFeedback(response);\n      setIsTyping(false);\n      setConversationLog([{ isUser: false, text: response }]);\n    });\n  }, [currentDay, getInitialPrompt]);\n  \n\n  const getAIFeedback = async (input, context) => {\n    setIsTyping(true);\n    const prompt = `Day ${currentDay} of Design Sprint. Context: ${context}. User input: \"${input}\". ${getCurrentPrompt()} Provide encouraging feedback and guidance based on the user's input. Suggest improvements or ask thought-provoking questions to help the user develop their ideas further.`;\n\n    try {\n      const response = await getGPTResponse(prompt);\n      setFeedback(response);\n      setConversationLog(prev => [...prev, { isUser: false, text: response }]);\n    } catch (error) {\n      console.error(\"Error getting AI feedback:\", error);\n      setFeedback(\"I'm having trouble providing feedback right now. Please try again.\");\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!input.trim()) return;\n\n    const userInput = input;\n    setInput('');\n    setIsTyping(true);\n    setConversationLog(prev => [...prev, { isUser: true, text: userInput }]);\n\n    let updatedSprintData = { ...sprintData };\n\n    if (currentDay === 1) {\n      if (!updatedSprintData[1]?.[\"Long-term Goal\"]) {\n        updatedSprintData[1] = { ...updatedSprintData[1], \"Long-term Goal\": userInput };\n      } else if (!updatedSprintData[1]?.[\"Critical Questions\"]) {\n        updatedSprintData[1] = { ...updatedSprintData[1], \"Critical Questions\": userInput };\n      }\n    } else {\n      const currentObjectives = getCurrentObjectives();\n      const currentObjective = currentObjectives[Object.keys(updatedSprintData[currentDay] || {}).length];\n      if (currentObjective) {\n        updatedSprintData[currentDay] = {\n          ...updatedSprintData[currentDay],\n          [currentObjective]: userInput\n        };\n      }\n    }\n\n    setSprintData(updatedSprintData);\n\n    const prompt = `Day ${currentDay} of Design Sprint. Context: ${JSON.stringify(updatedSprintData)}. User input: \"${userInput}\". ${getCurrentPrompt()} Provide concise guidance (2-3 sentences max) based on the user's input.`;\n\n    try {\n      const response = await getGPTResponse(prompt);\n      setFeedback(response);\n      setConversationLog(prev => [...prev, { isUser: false, text: response }]);\n    } catch (error) {\n      console.error(\"Error getting AI response:\", error);\n      setFeedback(\"I'm having trouble providing feedback right now. Please try again.\");\n    } finally {\n      setIsTyping(false);\n    }\n\n    checkDayCompletion();\n  };\n\n  const updateCrazyEightIdea = async (index, value) => {\n    const newIdeas = [...crazyEightIdeas];\n    newIdeas[index] = value;\n    setCrazyEightIdeas(newIdeas);\n    await getAIFeedback(value, `Updating Crazy 8s idea ${index + 1}`);\n  };\n\n  const updateStoryboardSection = async (index, value) => {\n    const newSections = [...storyboardSections];\n    newSections[index] = value;\n    setStoryboardSections(newSections);\n    await getAIFeedback(value, `Updating storyboard panel ${index + 1}`);\n    checkDayCompletion();\n  };\n\n  const updatePrototypeData = async (key, value) => {\n    setPrototypeData(prev => ({ ...prev, [key]: value }));\n    await getAIFeedback(value, `Updating prototype ${key}`);\n    checkDayCompletion();\n  };\n\n  const submitDay2 = useCallback(() => {\n    if (crazyEightIdeas.every(idea => idea.trim() !== '')) {\n      setSprintData(prev => ({\n        ...prev,\n        2: {\n          \"Crazy 8s\": crazyEightIdeas\n        }\n      }));\n      moveToNextDay();\n    } else {\n      alert(\"Please complete all 8 ideas before submitting.\");\n    }\n  }, [crazyEightIdeas, moveToNextDay]);\n\n  const submitDay3 = useCallback(() => {\n    if (storyboardSections.every(section => section.trim() !== '')) {\n      setSprintData(prev => ({\n        ...prev,\n        3: {\n          \"Solution Sketch\": storyboardSections.map((section, index) => `Panel ${index + 1}: ${section}`)\n        }\n      }));\n      moveToNextDay();\n    } else {\n      alert(\"Please complete all three storyboard panels before submitting.\");\n    }\n  }, [storyboardSections, moveToNextDay]);\n\n  const submitDay4 = useCallback(() => {\n    if (Object.values(prototypeData).every(value => value.trim() !== '')) {\n      setSprintData(prev => ({\n        ...prev,\n        4: prototypeData\n      }));\n      moveToNextDay();\n    } else {\n      alert(\"Please complete all prototype sections before submitting.\");\n    }\n  }, [prototypeData, moveToNextDay]);\n\n  const submitDay5 = useCallback(() => {\n    if (testingScenario.trim() !== '' && userInteraction.trim() !== '' && analysisNotes.trim() !== '') {\n      setSprintData(prev => ({\n        ...prev,\n        5: {\n          \"Testing Scenario\": testingScenario,\n          \"User Interaction\": userInteraction,\n          \"Analysis\": analysisNotes\n        }\n      }));\n      moveToNextDay();\n    } else {\n      alert(\"Please complete all sections before submitting.\");\n    }\n  }, [testingScenario, userInteraction, analysisNotes, moveToNextDay]);\n\n  const startTimer = () => {\n    setIsTimerRunning(true);\n    setTimerSeconds(480);\n  };\n\n  const copyConversationLog = () => {\n    const logText = conversationLog.map(entry => `**${entry.isUser ? 'User' : 'Relay'}**: ${entry.text}`).join('\\n');\n    navigator.clipboard.writeText(logText);\n  };\n\n  const conductSimulatedInteraction = async () => {\n    setIsTyping(true);\n    const prompt = `You are a potential user interacting with the following product prototype: ${JSON.stringify(prototypeData)}. Please provide realistic responses and actions based on this testing scenario: ${testingScenario}`;\n    try {\n      const response = await getGPTResponse(prompt);\n      setUserInteraction(response);\n      await getAIFeedback(response, \"Simulated user interaction\");\n    } catch (error) {\n      console.error(\"Error conducting simulated interaction:\", error);\n      setUserInteraction(\"Error: Unable to conduct simulated interaction.\");\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  return (\n    <SprintContainer>\n      <MainContent>\n        <ToggleSidebarButton onClick={() => setIsSidebarOpen(!isSidebarOpen)}>\n          {isSidebarOpen ? 'Close Sidebar' : 'Open Sidebar'}\n        </ToggleSidebarButton>\n        <Header>{`Day ${currentDay}: ${sprintGuidance[currentDay].goal}`}</Header>\n        {isTyping ? (\n          <TypingIndicator>\n            <span></span>\n            <span></span>\n            <span></span>\n          </TypingIndicator>\n        ) : (\n          feedback && (\n            <AIMessage>\n              <RelayIcon>Relay :)</RelayIcon> {feedback}\n            </AIMessage>\n          )\n        )}\n        {currentDay === 1 ? (\n          <InputWithSendIcon\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onSubmit={handleSubmit}\n            onKeyPress={(e) => e.key === 'Enter' && !e.shiftKey && handleSubmit()}\n            placeholder=\"Enter your response here...\"\n          />\n        ) : (\n          <>\n            {!showQuestionInput && (\n              <AskQuestionButton onClick={() => setShowQuestionInput(true)}>\n                Ask a question\n              </AskQuestionButton>\n            )}\n            {showQuestionInput && (\n              <InputWithSendIcon\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onSubmit={handleSubmit}\n                onKeyPress={(e) => e.key === 'Enter' && !e.shiftKey && handleSubmit()}\n                placeholder=\"Have any questions?\"\n              />\n            )}\n          </>\n        )}\n        {isReadyForNextDay && (\n          <NextDayButton onClick={moveToNextDay}>\n            Ready to move to Day {currentDay + 1}?\n          </NextDayButton>\n        )}\n        {currentDay === 2 && (\n          <CrazyEightContainer>\n            <CrazyEightInstructions>\n              Crazy 8s is a fast sketching exercise where you'll create 8 distinct ideas in 8 minutes. \n              The goal is to push beyond your first idea and generate a wide range of possibilities. \n              Don't worry about quality or feasibility at this stage - focus on quantity and variety!\n            </CrazyEightInstructions>\n            <CopyButton onClick={startTimer}>Start Crazy 8s Timer</CopyButton>\n            <Timer>{Math.floor(timerSeconds / 60)}:{(timerSeconds % 60).toString().padStart(2, '0')}</Timer>\n            {crazyEightIdeas.map((idea, index) => (\n              <CrazyEightInput\n                key={index}\n                value={idea}\n                onChange={(e) => updateCrazyEightIdea(index, e.target.value)}\n                placeholder={`Crazy 8s Idea ${index + 1}`}\n              />\n            ))}\n            {isReadyForNextDay && (\n              <SubmitButton onClick={submitDay2}>\n                Submit Crazy 8s and Move to Day 3\n              </SubmitButton>\n            )}\n          </CrazyEightContainer>\n        )}\n        {currentDay === 3 && (\n          <StoryboardContainer>\n            <StoryboardInstructions>\n              Create a three-panel storyboard that outlines your chosen solution. Each panel should represent a key step or moment in your solution:\n              1. The problem or starting point\n              2. The main action or change\n              3. The result or outcome\n              Describe each panel in detail, focusing on what the user sees and does.\n            </StoryboardInstructions>\n            {storyboardSections.map((section, index) => (\n              <StoryboardSection\n                key={index}\n                value={section}\n                onChange={(e) => updateStoryboardSection(index, e.target.value)}\n                placeholder={`Describe panel ${index + 1}`}\n              />\n            ))}\n            {isReadyForNextDay && (\n              <SubmitButton onClick={submitDay3}>\n                Submit Storyboard and Move to Day 4\n              </SubmitButton>\n            )}\n          </StoryboardContainer>\n        )}\n        {currentDay === 4 && (\n          <PrototypeSection>\n            <h3>Design Your Conceptual Prototype</h3>\n            <StoryboardSection\n              value={prototypeData.coreElements}\n              onChange={(e) => updatePrototypeData('coreElements', e.target.value)}\n              placeholder=\"Describe core elements...\"\n            />\n            <StoryboardSection\n              value={prototypeData.structureFlow}\n              onChange={(e) => updatePrototypeData('structureFlow', e.target.value)}\n              placeholder=\"Outline structure or flow...\"\n            />\n            <StoryboardSection\n              value={prototypeData.interactionsProcesses}\n              onChange={(e) => updatePrototypeData('interactionsProcesses', e.target.value)}\n              placeholder=\"Detail interactions or processes...\"\n            />\n            {isReadyForNextDay && (\n              <SubmitButton onClick={submitDay4}>\n                Submit Conceptual Prototype and Move to Day 5\n              </SubmitButton>\n            )}\n          </PrototypeSection>\n        )}\n        {currentDay === 5 && (\n          <InteractionSection>\n            <h3>Simulated User/Stakeholder Testing</h3>\n            <StoryboardSection\n              value={testingScenario}\n              onChange={(e) => setTestingScenario(e.target.value)}\n              placeholder=\"Describe a testing scenario for your prototype...\"\n            />\n            <CopyButton onClick={conductSimulatedInteraction}>Simulate User Interaction</CopyButton>\n            {userInteraction && (\n              <>\n                <h4>Simulated User Interaction:</h4>\n                <p>{userInteraction}</p>\n              </>\n            )}\n            <StoryboardSection\n              value={analysisNotes}\n              onChange={(e) => setAnalysisNotes(e.target.value)}\n              placeholder=\"Analyze the simulated feedback and consider potential iterations...\"\n            />\n            {isReadyForNextDay && (\n              <SubmitButton onClick={submitDay5}>\n                Submit Testing Results and Complete Sprint\n              </SubmitButton>\n            )}\n          </InteractionSection>\n        )}\n        {currentDay !== 1 && (\n          <AskQuestionButton onClick={() => setShowQuestionInput(!showQuestionInput)}>\n            {showQuestionInput ? 'Hide Question Input' : 'Ask a Question'}\n          </AskQuestionButton>\n        )}\n        {showQuestionInput && currentDay !== 1 && (\n          <InputWithSendIcon\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onSubmit={handleSubmit}\n            onKeyPress={(e) => e.key === 'Enter' && !e.shiftKey && handleSubmit()}\n            placeholder=\"Have any questions?\"\n          />\n        )}\n        <ConversationLog>\n          <h3>Conversation Log (For Development)</h3>\n          <CopyButton onClick={copyConversationLog}>Copy Log</CopyButton>\n          {conversationLog.map((entry, index) => (\n            <LogEntry key={index} isUser={entry.isUser}>\n              <strong>{entry.isUser ? 'User' : 'Relay'}</strong>: {entry.text}\n            </LogEntry>\n          ))}\n        </ConversationLog>\n      </MainContent>\n      {isSidebarOpen && (\n        <OutputSidebar\n          sprintData={sprintData}\n          currentDay={currentDay}\n        />\n      )}\n    </SprintContainer>\n  );\n};\n\nexport default DaySprint;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}