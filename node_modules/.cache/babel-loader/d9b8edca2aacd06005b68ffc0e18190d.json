{"ast":null,"code":"var _jsxFileName = \"/Users/nickbaumann/Develop/mini-design-sprint/src/components/DaySprint.js\";\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport AIChat from './AIChat';\nimport OutputSidebar from './OutputSidebar';\nimport { sprintGuidance } from '../utils/sprintResources';\nconst SprintContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: #121212;\n  color: #e0e0e0;\n`;\nconst MainContent = styled.div`\n  flex: 1;\n  padding: 2rem;\n  overflow-y: auto;\n`;\nconst DayTitle = styled.h1`\n  font-size: 2.5rem;\n  margin-bottom: 1.5rem;\n  color: #ffffff;\n`;\nconst ToggleSidebarButton = styled.button`\n  position: fixed;\n  top: 10px;\n  right: ${props => props.isSidebarOpen ? '310px' : '10px'};\n  background-color: #3c8ce7;\n  color: #ffffff;\n  border: none;\n  padding: 5px 10px;\n  font-size: 0.8rem;\n  cursor: pointer;\n  border-radius: 5px;\n  z-index: 1000;\n  transition: right 0.3s ease;\n`;\nconst DaySprint = ({\n  initialDay,\n  onUpdateOutput,\n  sprintOutput\n}) => {\n  const [currentDay, setCurrentDay] = useState(initialDay);\n  const [deliverables, setDeliverables] = useState(sprintOutput);\n  const [stickyNotes, setStickyNotes] = useState([]);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const handleUpdateDeliverable = useCallback((day, deliverable) => {\n    setDeliverables(prev => {\n      const newDeliverables = {\n        ...prev,\n        [day]: deliverable\n      };\n      onUpdateOutput(day, deliverable);\n      return newDeliverables;\n    });\n  }, [onUpdateOutput]);\n  const handleNextDay = useCallback(() => {\n    setCurrentDay(prev => Math.min(prev + 1, 5));\n  }, []);\n  const handleAddStickyNote = useCallback(note => {\n    setStickyNotes(prev => [...prev, note]);\n  }, []);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(prev => !prev);\n  };\n  const {\n    goal\n  } = sprintGuidance[currentDay];\n  return /*#__PURE__*/React.createElement(SprintContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DayTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, `Day ${currentDay}: ${goal}`), /*#__PURE__*/React.createElement(AIChat, {\n    day: currentDay,\n    onUpdateDeliverable: handleUpdateDeliverable,\n    onNextDay: handleNextDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })), isSidebarOpen && /*#__PURE__*/React.createElement(OutputSidebar, {\n    deliverables: deliverables,\n    currentDay: currentDay,\n    stickyNotes: stickyNotes,\n    onAddStickyNote: handleAddStickyNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ToggleSidebarButton, {\n    onClick: toggleSidebar,\n    isSidebarOpen: isSidebarOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, isSidebarOpen ? 'Close Sidebar' : 'Open Sidebar'));\n};\nexport default DaySprint;","map":{"version":3,"names":["React","useState","useCallback","styled","AIChat","OutputSidebar","sprintGuidance","SprintContainer","div","MainContent","DayTitle","h1","ToggleSidebarButton","button","props","isSidebarOpen","DaySprint","initialDay","onUpdateOutput","sprintOutput","currentDay","setCurrentDay","deliverables","setDeliverables","stickyNotes","setStickyNotes","setIsSidebarOpen","handleUpdateDeliverable","day","deliverable","prev","newDeliverables","handleNextDay","Math","min","handleAddStickyNote","note","toggleSidebar","goal","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onUpdateDeliverable","onNextDay","onAddStickyNote","onClick"],"sources":["/Users/nickbaumann/Develop/mini-design-sprint/src/components/DaySprint.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport AIChat from './AIChat';\nimport OutputSidebar from './OutputSidebar';\nimport { sprintGuidance } from '../utils/sprintResources';\n\nconst SprintContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: #121212;\n  color: #e0e0e0;\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  padding: 2rem;\n  overflow-y: auto;\n`;\n\nconst DayTitle = styled.h1`\n  font-size: 2.5rem;\n  margin-bottom: 1.5rem;\n  color: #ffffff;\n`;\n\nconst ToggleSidebarButton = styled.button`\n  position: fixed;\n  top: 10px;\n  right: ${props => props.isSidebarOpen ? '310px' : '10px'};\n  background-color: #3c8ce7;\n  color: #ffffff;\n  border: none;\n  padding: 5px 10px;\n  font-size: 0.8rem;\n  cursor: pointer;\n  border-radius: 5px;\n  z-index: 1000;\n  transition: right 0.3s ease;\n`;\n\nconst DaySprint = ({ initialDay, onUpdateOutput, sprintOutput }) => {\n  const [currentDay, setCurrentDay] = useState(initialDay);\n  const [deliverables, setDeliverables] = useState(sprintOutput);\n  const [stickyNotes, setStickyNotes] = useState([]);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n\n  const handleUpdateDeliverable = useCallback((day, deliverable) => {\n    setDeliverables(prev => {\n      const newDeliverables = { ...prev, [day]: deliverable };\n      onUpdateOutput(day, deliverable);\n      return newDeliverables;\n    });\n  }, [onUpdateOutput]);\n\n  const handleNextDay = useCallback(() => {\n    setCurrentDay(prev => Math.min(prev + 1, 5));\n  }, []);\n\n  const handleAddStickyNote = useCallback((note) => {\n    setStickyNotes(prev => [...prev, note]);\n  }, []);\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(prev => !prev);\n  };\n\n  const { goal } = sprintGuidance[currentDay];\n\n  return (\n    <SprintContainer>\n      <MainContent>\n        <DayTitle>{`Day ${currentDay}: ${goal}`}</DayTitle>\n        <AIChat \n          day={currentDay} \n          onUpdateDeliverable={handleUpdateDeliverable}\n          onNextDay={handleNextDay}\n        />\n      </MainContent>\n      {isSidebarOpen && (\n        <OutputSidebar \n          deliverables={deliverables} \n          currentDay={currentDay}\n          stickyNotes={stickyNotes}\n          onAddStickyNote={handleAddStickyNote}\n        />\n      )}\n      <ToggleSidebarButton onClick={toggleSidebar} isSidebarOpen={isSidebarOpen}>\n        {isSidebarOpen ? 'Close Sidebar' : 'Open Sidebar'}\n      </ToggleSidebarButton>\n    </SprintContainer>\n  );\n};\n\nexport default DaySprint;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}