{"ast":null,"code":"export const states = {\n  LONG_TERM_GOAL: 'LONG_TERM_GOAL',\n  KEY_CHALLENGES: 'KEY_CHALLENGES',\n  OPPORTUNITIES: 'OPPORTUNITIES',\n  IDEA_GENERATION: 'IDEA_GENERATION',\n  IDEA_SELECTION: 'IDEA_SELECTION',\n  COMPLETED: 'COMPLETED'\n};\nexport const createSprintDay = day => {\n  switch (day) {\n    case 1:\n      return {\n        initialState: states.LONG_TERM_GOAL,\n        transitions: {\n          [states.LONG_TERM_GOAL]: states.KEY_CHALLENGES,\n          [states.KEY_CHALLENGES]: states.OPPORTUNITIES,\n          [states.OPPORTUNITIES]: states.COMPLETED\n        },\n        prompts: {\n          [states.LONG_TERM_GOAL]: \"What is the long-term goal for your project?\",\n          [states.KEY_CHALLENGES]: \"What's a key challenge you anticipate? (List at least 2)\",\n          [states.OPPORTUNITIES]: \"What's an opportunity you see for achieving your goal?\",\n          [states.COMPLETED]: \"Great job! You've completed Day 1. [SHOW_NEXT_DAY_BUTTON]\"\n        }\n      };\n    case 2:\n      return {\n        initialState: states.IDEA_GENERATION,\n        transitions: {\n          [states.IDEA_GENERATION]: states.IDEA_SELECTION,\n          [states.IDEA_SELECTION]: states.COMPLETED\n        },\n        prompts: {\n          [states.IDEA_GENERATION]: \"Let's brainstorm solutions. What's an idea you have?\",\n          [states.IDEA_SELECTION]: \"Which idea do you think is the most promising?\",\n          [states.COMPLETED]: \"Excellent work on Day 2! [SHOW_NEXT_DAY_BUTTON]\"\n        }\n      };\n    // Add cases for days 3, 4, and 5 here as needed\n    default:\n      return {\n        initialState: states.COMPLETED,\n        transitions: {},\n        prompts: {\n          [states.COMPLETED]: \"The sprint is complete. Great job!\"\n        }\n      };\n  }\n};","map":{"version":3,"names":["states","LONG_TERM_GOAL","KEY_CHALLENGES","OPPORTUNITIES","IDEA_GENERATION","IDEA_SELECTION","COMPLETED","createSprintDay","day","initialState","transitions","prompts"],"sources":["/Users/nickbaumann/Develop/mini-design-sprint/src/components/sprintStateMachine.js"],"sourcesContent":["export const states = {\n    LONG_TERM_GOAL: 'LONG_TERM_GOAL',\n    KEY_CHALLENGES: 'KEY_CHALLENGES',\n    OPPORTUNITIES: 'OPPORTUNITIES',\n    IDEA_GENERATION: 'IDEA_GENERATION',\n    IDEA_SELECTION: 'IDEA_SELECTION',\n    COMPLETED: 'COMPLETED'\n  };\n  \n  export const createSprintDay = (day) => {\n    switch(day) {\n      case 1:\n        return {\n          initialState: states.LONG_TERM_GOAL,\n          transitions: {\n            [states.LONG_TERM_GOAL]: states.KEY_CHALLENGES,\n            [states.KEY_CHALLENGES]: states.OPPORTUNITIES,\n            [states.OPPORTUNITIES]: states.COMPLETED\n          },\n          prompts: {\n            [states.LONG_TERM_GOAL]: \"What is the long-term goal for your project?\",\n            [states.KEY_CHALLENGES]: \"What's a key challenge you anticipate? (List at least 2)\",\n            [states.OPPORTUNITIES]: \"What's an opportunity you see for achieving your goal?\",\n            [states.COMPLETED]: \"Great job! You've completed Day 1. [SHOW_NEXT_DAY_BUTTON]\"\n          }\n        };\n      case 2:\n        return {\n          initialState: states.IDEA_GENERATION,\n          transitions: {\n            [states.IDEA_GENERATION]: states.IDEA_SELECTION,\n            [states.IDEA_SELECTION]: states.COMPLETED\n          },\n          prompts: {\n            [states.IDEA_GENERATION]: \"Let's brainstorm solutions. What's an idea you have?\",\n            [states.IDEA_SELECTION]: \"Which idea do you think is the most promising?\",\n            [states.COMPLETED]: \"Excellent work on Day 2! [SHOW_NEXT_DAY_BUTTON]\"\n          }\n        };\n      // Add cases for days 3, 4, and 5 here as needed\n      default:\n        return {\n          initialState: states.COMPLETED,\n          transitions: {},\n          prompts: {\n            [states.COMPLETED]: \"The sprint is complete. Great job!\"\n          }\n        };\n    }\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAG;EAClBC,cAAc,EAAE,gBAAgB;EAChCC,cAAc,EAAE,gBAAgB;EAChCC,aAAa,EAAE,eAAe;EAC9BC,eAAe,EAAE,iBAAiB;EAClCC,cAAc,EAAE,gBAAgB;EAChCC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIC,GAAG,IAAK;EACtC,QAAOA,GAAG;IACR,KAAK,CAAC;MACJ,OAAO;QACLC,YAAY,EAAET,MAAM,CAACC,cAAc;QACnCS,WAAW,EAAE;UACX,CAACV,MAAM,CAACC,cAAc,GAAGD,MAAM,CAACE,cAAc;UAC9C,CAACF,MAAM,CAACE,cAAc,GAAGF,MAAM,CAACG,aAAa;UAC7C,CAACH,MAAM,CAACG,aAAa,GAAGH,MAAM,CAACM;QACjC,CAAC;QACDK,OAAO,EAAE;UACP,CAACX,MAAM,CAACC,cAAc,GAAG,8CAA8C;UACvE,CAACD,MAAM,CAACE,cAAc,GAAG,0DAA0D;UACnF,CAACF,MAAM,CAACG,aAAa,GAAG,wDAAwD;UAChF,CAACH,MAAM,CAACM,SAAS,GAAG;QACtB;MACF,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLG,YAAY,EAAET,MAAM,CAACI,eAAe;QACpCM,WAAW,EAAE;UACX,CAACV,MAAM,CAACI,eAAe,GAAGJ,MAAM,CAACK,cAAc;UAC/C,CAACL,MAAM,CAACK,cAAc,GAAGL,MAAM,CAACM;QAClC,CAAC;QACDK,OAAO,EAAE;UACP,CAACX,MAAM,CAACI,eAAe,GAAG,sDAAsD;UAChF,CAACJ,MAAM,CAACK,cAAc,GAAG,gDAAgD;UACzE,CAACL,MAAM,CAACM,SAAS,GAAG;QACtB;MACF,CAAC;IACH;IACA;MACE,OAAO;QACLG,YAAY,EAAET,MAAM,CAACM,SAAS;QAC9BI,WAAW,EAAE,CAAC,CAAC;QACfC,OAAO,EAAE;UACP,CAACX,MAAM,CAACM,SAAS,GAAG;QACtB;MACF,CAAC;EACL;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}