{"ast":null,"code":"var _jsxFileName = \"/Users/nickbaumann/Develop/mini-design-sprint/src/components/DaySprint.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { getGPTResponse } from '../utils/gptService';\nimport { sprintGuidance } from '../utils/sprintResources';\nimport OutputSidebar from './OutputSidebar';\nimport InputWithSendIcon from './InputWithSendIcon';\nconst SprintContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: #121212;\n  color: #e0e0e0;\n`;\nconst MainContent = styled.div`\n  flex: 1;\n  padding: 2rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n`;\nconst Header = styled.h1`\n  color: #3c8ce7;\n  font-size: 2.5rem;\n  margin-bottom: 20px;\n`;\nconst AIMessage = styled.div`\n  background-color: #2a2a2a;\n  color: #e0e0e0;\n  padding: 15px;\n  border-radius: 15px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  position: relative;\n  max-width: 80%;\n  align-self: flex-start;\n`;\nconst RelayIcon = styled.span`\n  font-weight: bold;\n  color: #3c8ce7;\n  margin-right: 5px;\n`;\nconst typing = keyframes`\n  0% { opacity: 0.3; }\n  50% { opacity: 1; }\n  100% { opacity: 0.3; }\n`;\nconst TypingIndicator = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 30px;\n  margin-bottom: 20px;\n\n  span {\n    height: 10px;\n    width: 10px;\n    margin: 0 2px;\n    background-color: #3c8ce7;\n    border-radius: 50%;\n    display: inline-block;\n    animation: ${typing} 1s infinite;\n\n    &:nth-child(2) {\n      animation-delay: 0.2s;\n    }\n\n    &:nth-child(3) {\n      animation-delay: 0.4s;\n    }\n  }\n`;\nconst NextDayButton = styled.button`\n  background-color: #3c8ce7;\n  color: #ffffff;\n  border: none;\n  padding: 10px 20px;\n  font-size: 1rem;\n  cursor: pointer;\n  border-radius: 5px;\n  margin-top: 20px;\n  align-self: flex-start;\n`;\nconst StickyNotesSection = styled.div`\n  margin-top: 2rem;\n`;\nconst StickyNotesGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\nconst StickyNote = styled.div`\n  background-color: #feff9c;\n  padding: 0.75rem;\n  width: 150px;\n  height: 150px;\n  border-radius: 3px;\n  color: #000000;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  text-align: center;\n  position: relative;\n`;\nconst DeleteNote = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  background: none;\n  border: none;\n  color: #ff4136;\n  cursor: pointer;\n  font-size: 1.2rem;\n`;\nconst StickyNoteInput = styled.input`\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 0.75rem;\n  border: none;\n  border-radius: 3px;\n  background-color: #2a2a2a;\n  color: #e0e0e0;\n`;\nconst StickyNotePrompt = styled.p`\n  color: #b0b0b0;\n  font-style: italic;\n  margin-bottom: 10px;\n`;\nconst ConversationLog = styled.div`\n  margin-top: 2rem;\n  padding: 1rem;\n  background-color: #2a2a2a;\n  border-radius: 5px;\n  max-height: 300px;\n  overflow-y: auto;\n`;\nconst LogEntry = styled.div`\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  background-color: ${props => props.isUser ? '#3c8ce7' : '#1e1e1e'};\n  border-radius: 5px;\n  color: ${props => props.isUser ? '#ffffff' : '#e0e0e0'};\n`;\nconst CopyButton = styled.button`\n  background-color: #3c8ce7;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-bottom: 1rem;\n`;\nconst Timer = styled.div`\n  font-size: 2rem;\n  text-align: center;\n  margin: 1rem 0;\n`;\nconst CrazyEightInput = styled.input`\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 0.5rem;\n  border: 1px solid #3c8ce7;\n  border-radius: 5px;\n`;\nconst AddIdeaButton = styled.button`\n  background-color: #3c8ce7;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-bottom: 1rem;\n`;\nconst StoryboardSection = styled.textarea`\n  width: 100%;\n  height: 100px;\n  margin-top: 1rem;\n  padding: 0.5rem;\n  border-radius: 5px;\n`;\nconst DaySprint = () => {\n  const [currentDay, setCurrentDay] = useState(1);\n  const [input, setInput] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [sprintData, setSprintData] = useState({});\n  const [stickyNotes, setStickyNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [conversationLog, setConversationLog] = useState([]);\n  const [timerSeconds, setTimerSeconds] = useState(480); // 8 minutes\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [crazyEightIdeas, setCrazyEightIdeas] = useState(['']);\n  const [storyboardSections, setStoryboardSections] = useState(['', '', '']);\n  const [isCrazyEightComplete, setIsCrazyEightComplete] = useState(false);\n  const [isReadyForNextDay, setIsReadyForNextDay] = useState(false);\n  const getCurrentPrompt = useCallback(() => sprintGuidance[currentDay].prompt, [currentDay]);\n  const getCurrentObjectives = useCallback(() => sprintGuidance[currentDay].objectives, [currentDay]);\n  const handleSubmit = async () => {\n    if (!input.trim()) return;\n    setIsTyping(true);\n    const userInput = input;\n    setInput('');\n    setConversationLog(prev => [...prev, {\n      isUser: true,\n      text: userInput\n    }]);\n    const prompt = `Day ${currentDay} of Design Sprint. User input: \"${userInput}\". ${getCurrentPrompt()} Provide guidance and suggestions to help the user develop their own ideas. Do not provide direct answers or solutions. Encourage the user to think critically and come up with their own responses.`;\n    try {\n      const response = await getGPTResponse(prompt);\n      const cleanedResponse = response.replace('[SHOW_NEXT_DAY_BUTTON]', '').trim();\n      setFeedback(cleanedResponse);\n      setConversationLog(prev => [...prev, {\n        isUser: false,\n        text: cleanedResponse\n      }]);\n      const currentObjectives = getCurrentObjectives();\n      const currentObjective = currentObjectives[Object.keys(sprintData[currentDay] || {}).length];\n      if (currentObjective) {\n        let summaryPrompt;\n        if (currentObjective.includes(\"Critical Questions\")) {\n          summaryPrompt = `Extract and list the critical questions from the following user input for the Design Sprint Day ${currentDay}. User input: \"${userInput}\". Provide only the numbered list of questions, without any additional text.`;\n        } else {\n          summaryPrompt = `Summarize and refine the following user input for the Design Sprint Day ${currentDay}, objective: ${currentObjective}. User input: \"${userInput}\". Provide a concise, clear summary that captures the essence of the user's input. Do not include any meta-text like [SHOW_NEXT_DAY_BUTTON].`;\n        }\n        const summary = await getGPTResponse(summaryPrompt);\n        setSprintData(prev => {\n          var _prev$currentDay;\n          return {\n            ...prev,\n            [currentDay]: {\n              ...prev[currentDay],\n              [currentObjective]: currentObjective.includes(\"Critical Questions\") ? [...(((_prev$currentDay = prev[currentDay]) === null || _prev$currentDay === void 0 ? void 0 : _prev$currentDay[currentObjective]) || []), ...summary.split('\\n')] : summary\n            }\n          };\n        });\n      }\n      checkDayCompletion();\n    } catch (error) {\n      console.error(\"Error getting AI response:\", error);\n      setFeedback(\"I'm having trouble providing feedback right now. Please try again.\");\n      setConversationLog(prev => [...prev, {\n        isUser: false,\n        text: \"Error: Unable to process response.\"\n      }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const checkDayCompletion = useCallback(() => {\n    const completedObjectives = Object.keys(sprintData[currentDay] || {}).length;\n    const totalObjectives = getCurrentObjectives().length;\n    if (completedObjectives === totalObjectives) {\n      if (currentDay === 2) {\n        if (isCrazyEightComplete && storyboardSections.every(section => section.trim() !== '')) {\n          setIsReadyForNextDay(true);\n        }\n      } else {\n        setIsReadyForNextDay(true);\n      }\n    }\n  }, [currentDay, sprintData, getCurrentObjectives, isCrazyEightComplete, storyboardSections]);\n  const moveToNextDay = () => {\n    setCurrentDay(prev => Math.min(prev + 1, 5));\n    setFeedback('');\n    setIsReadyForNextDay(false);\n    setCrazyEightIdeas(['']);\n    setStoryboardSections(['', '', '']);\n    setIsCrazyEightComplete(false);\n  };\n  const startTimer = () => {\n    setIsTimerRunning(true);\n    setTimerSeconds(480);\n  };\n  const addStickyNote = () => {\n    if (newNote.trim()) {\n      setStickyNotes(prev => [...prev, newNote]);\n      setNewNote('');\n    }\n  };\n  const deleteStickyNote = index => {\n    setStickyNotes(prev => prev.filter((_, i) => i !== index));\n  };\n  const addCrazyEightIdea = () => {\n    if (crazyEightIdeas.length < 8) {\n      setCrazyEightIdeas(prev => [...prev, '']);\n    }\n    if (crazyEightIdeas.length === 7) {\n      setIsCrazyEightComplete(true);\n    }\n  };\n  const updateCrazyEightIdea = (index, value) => {\n    setCrazyEightIdeas(prev => {\n      const newIdeas = [...prev];\n      newIdeas[index] = value;\n      return newIdeas;\n    });\n  };\n  const updateStoryboardSection = (index, value) => {\n    setStoryboardSections(prev => {\n      const newSections = [...prev];\n      newSections[index] = value;\n      return newSections;\n    });\n    checkDayCompletion();\n  };\n  const copyConversationLog = () => {\n    const logText = conversationLog.map(entry => `**${entry.isUser ? 'User' : 'Relay'}**: ${entry.text}`).join('\\n');\n    navigator.clipboard.writeText(logText);\n  };\n  useEffect(() => {\n    let interval;\n    if (isTimerRunning && timerSeconds > 0) {\n      interval = setInterval(() => {\n        setTimerSeconds(seconds => seconds - 1);\n      }, 1000);\n    } else if (timerSeconds === 0) {\n      setIsTimerRunning(false);\n    }\n    return () => clearInterval(interval);\n  }, [isTimerRunning, timerSeconds]);\n  useEffect(() => {\n    checkDayCompletion();\n  }, [sprintData, checkDayCompletion]);\n  useEffect(() => {\n    const initialPrompt = `Welcome to Day ${currentDay} of the Design Sprint. ${getCurrentPrompt()} As an expert design sprint coach, provide a brief, encouraging message to start the day. Remind the user of the objectives they need to complete.`;\n    setIsTyping(true);\n    getGPTResponse(initialPrompt).then(response => {\n      const cleanedResponse = response.replace('[SHOW_NEXT_DAY_BUTTON]', '').trim();\n      setFeedback(cleanedResponse);\n      setIsTyping(false);\n      setConversationLog([{\n        isUser: false,\n        text: cleanedResponse\n      }]);\n    });\n  }, [currentDay, getCurrentPrompt]);\n  return /*#__PURE__*/React.createElement(SprintContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }\n  }, `Day ${currentDay}: ${sprintGuidance[currentDay].goal}`), isTyping ? /*#__PURE__*/React.createElement(TypingIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  })) : feedback && /*#__PURE__*/React.createElement(AIMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RelayIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 15\n    }\n  }, \"Relay :)\"), \" \", feedback), /*#__PURE__*/React.createElement(InputWithSendIcon, {\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onSubmit: handleSubmit,\n    onKeyPress: e => e.key === 'Enter' && !e.shiftKey && handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }\n  }), isReadyForNextDay && /*#__PURE__*/React.createElement(NextDayButton, {\n    onClick: moveToNextDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 11\n    }\n  }, \"Ready to move to Day \", currentDay + 1, \"?\"), currentDay === 2 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CopyButton, {\n    onClick: startTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }\n  }, \"Start Crazy 8s Timer\"), /*#__PURE__*/React.createElement(Timer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }\n  }, Math.floor(timerSeconds / 60), \":\", (timerSeconds % 60).toString().padStart(2, '0')), crazyEightIdeas.map((idea, index) => /*#__PURE__*/React.createElement(CrazyEightInput, {\n    key: index,\n    value: idea,\n    onChange: e => updateCrazyEightIdea(index, e.target.value),\n    placeholder: `Crazy 8s Idea ${index + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 15\n    }\n  })), crazyEightIdeas.length < 8 && /*#__PURE__*/React.createElement(AddIdeaButton, {\n    onClick: addCrazyEightIdea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 15\n    }\n  }, \"Add Idea\"), isCrazyEightComplete && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 17\n    }\n  }, \"Three-Panel Storyboard\"), storyboardSections.map((section, index) => /*#__PURE__*/React.createElement(StoryboardSection, {\n    key: index,\n    value: section,\n    onChange: e => updateStoryboardSection(index, e.target.value),\n    placeholder: `Describe panel ${index + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(StickyNotesSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StickyNotePrompt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 11\n    }\n  }, \"Add your quick thoughts to the sticky note board:\"), /*#__PURE__*/React.createElement(StickyNotesGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 11\n    }\n  }, stickyNotes.map((note, index) => /*#__PURE__*/React.createElement(StickyNote, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 15\n    }\n  }, note, /*#__PURE__*/React.createElement(DeleteNote, {\n    onClick: () => deleteStickyNote(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")))), /*#__PURE__*/React.createElement(StickyNoteInput, {\n    value: newNote,\n    onChange: e => setNewNote(e.target.value),\n    placeholder: \"Add a new note...\",\n    onKeyPress: e => e.key === 'Enter' && addStickyNote(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ConversationLog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 11\n    }\n  }, \"Conversation Log (For Development)\"), /*#__PURE__*/React.createElement(CopyButton, {\n    onClick: copyConversationLog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 11\n    }\n  }, \"Copy Log\"), conversationLog.map((entry, index) => /*#__PURE__*/React.createElement(LogEntry, {\n    key: index,\n    isUser: entry.isUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 15\n    }\n  }, entry.isUser ? 'User' : 'Relay'), \": \", entry.text)))), /*#__PURE__*/React.createElement(OutputSidebar, {\n    sprintData: sprintData,\n    currentDay: currentDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }\n  }));\n};\nexport default DaySprint;","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","keyframes","getGPTResponse","sprintGuidance","OutputSidebar","InputWithSendIcon","SprintContainer","div","MainContent","Header","h1","AIMessage","RelayIcon","span","typing","TypingIndicator","NextDayButton","button","StickyNotesSection","StickyNotesGrid","StickyNote","DeleteNote","StickyNoteInput","input","StickyNotePrompt","p","ConversationLog","LogEntry","props","isUser","CopyButton","Timer","CrazyEightInput","AddIdeaButton","StoryboardSection","textarea","DaySprint","currentDay","setCurrentDay","setInput","feedback","setFeedback","sprintData","setSprintData","stickyNotes","setStickyNotes","newNote","setNewNote","isTyping","setIsTyping","conversationLog","setConversationLog","timerSeconds","setTimerSeconds","isTimerRunning","setIsTimerRunning","crazyEightIdeas","setCrazyEightIdeas","storyboardSections","setStoryboardSections","isCrazyEightComplete","setIsCrazyEightComplete","isReadyForNextDay","setIsReadyForNextDay","getCurrentPrompt","prompt","getCurrentObjectives","objectives","handleSubmit","trim","userInput","prev","text","response","cleanedResponse","replace","currentObjectives","currentObjective","Object","keys","length","summaryPrompt","includes","summary","_prev$currentDay","split","checkDayCompletion","error","console","completedObjectives","totalObjectives","every","section","moveToNextDay","Math","min","startTimer","addStickyNote","deleteStickyNote","index","filter","_","i","addCrazyEightIdea","updateCrazyEightIdea","value","newIdeas","updateStoryboardSection","newSections","copyConversationLog","logText","map","entry","join","navigator","clipboard","writeText","interval","setInterval","seconds","clearInterval","initialPrompt","then","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","goal","onChange","e","target","onSubmit","onKeyPress","key","shiftKey","onClick","Fragment","floor","toString","padStart","idea","placeholder","note"],"sources":["/Users/nickbaumann/Develop/mini-design-sprint/src/components/DaySprint.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { getGPTResponse } from '../utils/gptService';\nimport { sprintGuidance } from '../utils/sprintResources';\nimport OutputSidebar from './OutputSidebar';\nimport InputWithSendIcon from './InputWithSendIcon';\n\nconst SprintContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: #121212;\n  color: #e0e0e0;\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  padding: 2rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.h1`\n  color: #3c8ce7;\n  font-size: 2.5rem;\n  margin-bottom: 20px;\n`;\n\nconst AIMessage = styled.div`\n  background-color: #2a2a2a;\n  color: #e0e0e0;\n  padding: 15px;\n  border-radius: 15px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  position: relative;\n  max-width: 80%;\n  align-self: flex-start;\n`;\n\nconst RelayIcon = styled.span`\n  font-weight: bold;\n  color: #3c8ce7;\n  margin-right: 5px;\n`;\n\nconst typing = keyframes`\n  0% { opacity: 0.3; }\n  50% { opacity: 1; }\n  100% { opacity: 0.3; }\n`;\n\nconst TypingIndicator = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 30px;\n  margin-bottom: 20px;\n\n  span {\n    height: 10px;\n    width: 10px;\n    margin: 0 2px;\n    background-color: #3c8ce7;\n    border-radius: 50%;\n    display: inline-block;\n    animation: ${typing} 1s infinite;\n\n    &:nth-child(2) {\n      animation-delay: 0.2s;\n    }\n\n    &:nth-child(3) {\n      animation-delay: 0.4s;\n    }\n  }\n`;\n\nconst NextDayButton = styled.button`\n  background-color: #3c8ce7;\n  color: #ffffff;\n  border: none;\n  padding: 10px 20px;\n  font-size: 1rem;\n  cursor: pointer;\n  border-radius: 5px;\n  margin-top: 20px;\n  align-self: flex-start;\n`;\n\nconst StickyNotesSection = styled.div`\n  margin-top: 2rem;\n`;\n\nconst StickyNotesGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nconst StickyNote = styled.div`\n  background-color: #feff9c;\n  padding: 0.75rem;\n  width: 150px;\n  height: 150px;\n  border-radius: 3px;\n  color: #000000;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  text-align: center;\n  position: relative;\n`;\n\nconst DeleteNote = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  background: none;\n  border: none;\n  color: #ff4136;\n  cursor: pointer;\n  font-size: 1.2rem;\n`;\n\nconst StickyNoteInput = styled.input`\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 0.75rem;\n  border: none;\n  border-radius: 3px;\n  background-color: #2a2a2a;\n  color: #e0e0e0;\n`;\n\nconst StickyNotePrompt = styled.p`\n  color: #b0b0b0;\n  font-style: italic;\n  margin-bottom: 10px;\n`;\n\nconst ConversationLog = styled.div`\n  margin-top: 2rem;\n  padding: 1rem;\n  background-color: #2a2a2a;\n  border-radius: 5px;\n  max-height: 300px;\n  overflow-y: auto;\n`;\n\nconst LogEntry = styled.div`\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  background-color: ${props => props.isUser ? '#3c8ce7' : '#1e1e1e'};\n  border-radius: 5px;\n  color: ${props => props.isUser ? '#ffffff' : '#e0e0e0'};\n`;\n\nconst CopyButton = styled.button`\n  background-color: #3c8ce7;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-bottom: 1rem;\n`;\n\nconst Timer = styled.div`\n  font-size: 2rem;\n  text-align: center;\n  margin: 1rem 0;\n`;\n\nconst CrazyEightInput = styled.input`\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 0.5rem;\n  border: 1px solid #3c8ce7;\n  border-radius: 5px;\n`;\n\nconst AddIdeaButton = styled.button`\n  background-color: #3c8ce7;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-bottom: 1rem;\n`;\n\nconst StoryboardSection = styled.textarea`\n  width: 100%;\n  height: 100px;\n  margin-top: 1rem;\n  padding: 0.5rem;\n  border-radius: 5px;\n`;\n\nconst DaySprint = () => {\n  const [currentDay, setCurrentDay] = useState(1);\n  const [input, setInput] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [sprintData, setSprintData] = useState({});\n  const [stickyNotes, setStickyNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [conversationLog, setConversationLog] = useState([]);\n  const [timerSeconds, setTimerSeconds] = useState(480); // 8 minutes\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [crazyEightIdeas, setCrazyEightIdeas] = useState(['']);\n  const [storyboardSections, setStoryboardSections] = useState(['', '', '']);\n  const [isCrazyEightComplete, setIsCrazyEightComplete] = useState(false);\n  const [isReadyForNextDay, setIsReadyForNextDay] = useState(false);\n\n  const getCurrentPrompt = useCallback(() => sprintGuidance[currentDay].prompt, [currentDay]);\n  const getCurrentObjectives = useCallback(() => sprintGuidance[currentDay].objectives, [currentDay]);\n\n  const handleSubmit = async () => {\n    if (!input.trim()) return;\n    \n    setIsTyping(true);\n    const userInput = input;\n    setInput('');\n    \n    setConversationLog(prev => [...prev, { isUser: true, text: userInput }]);\n    \n    const prompt = `Day ${currentDay} of Design Sprint. User input: \"${userInput}\". ${getCurrentPrompt()} Provide guidance and suggestions to help the user develop their own ideas. Do not provide direct answers or solutions. Encourage the user to think critically and come up with their own responses.`;\n    \n    try {\n      const response = await getGPTResponse(prompt);\n      const cleanedResponse = response.replace('[SHOW_NEXT_DAY_BUTTON]', '').trim();\n      setFeedback(cleanedResponse);\n      setConversationLog(prev => [...prev, { isUser: false, text: cleanedResponse }]);\n      \n      const currentObjectives = getCurrentObjectives();\n      const currentObjective = currentObjectives[Object.keys(sprintData[currentDay] || {}).length];\n      \n      if (currentObjective) {\n        let summaryPrompt;\n        if (currentObjective.includes(\"Critical Questions\")) {\n          summaryPrompt = `Extract and list the critical questions from the following user input for the Design Sprint Day ${currentDay}. User input: \"${userInput}\". Provide only the numbered list of questions, without any additional text.`;\n        } else {\n          summaryPrompt = `Summarize and refine the following user input for the Design Sprint Day ${currentDay}, objective: ${currentObjective}. User input: \"${userInput}\". Provide a concise, clear summary that captures the essence of the user's input. Do not include any meta-text like [SHOW_NEXT_DAY_BUTTON].`;\n        }\n        \n        const summary = await getGPTResponse(summaryPrompt);\n        \n        setSprintData(prev => ({\n          ...prev,\n          [currentDay]: {\n            ...prev[currentDay],\n            [currentObjective]: currentObjective.includes(\"Critical Questions\") \n              ? [...(prev[currentDay]?.[currentObjective] || []), ...summary.split('\\n')]\n              : summary\n          }\n        }));\n      }\n\n      checkDayCompletion();\n    } catch (error) {\n      console.error(\"Error getting AI response:\", error);\n      setFeedback(\"I'm having trouble providing feedback right now. Please try again.\");\n      setConversationLog(prev => [...prev, { isUser: false, text: \"Error: Unable to process response.\" }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  const checkDayCompletion = useCallback(() => {\n    const completedObjectives = Object.keys(sprintData[currentDay] || {}).length;\n    const totalObjectives = getCurrentObjectives().length;\n    \n    if (completedObjectives === totalObjectives) {\n      if (currentDay === 2) {\n        if (isCrazyEightComplete && storyboardSections.every(section => section.trim() !== '')) {\n          setIsReadyForNextDay(true);\n        }\n      } else {\n        setIsReadyForNextDay(true);\n      }\n    }\n  }, [currentDay, sprintData, getCurrentObjectives, isCrazyEightComplete, storyboardSections]);\n\n  const moveToNextDay = () => {\n    setCurrentDay(prev => Math.min(prev + 1, 5));\n    setFeedback('');\n    setIsReadyForNextDay(false);\n    setCrazyEightIdeas(['']);\n    setStoryboardSections(['', '', '']);\n    setIsCrazyEightComplete(false);\n  };\n\n  const startTimer = () => {\n    setIsTimerRunning(true);\n    setTimerSeconds(480);\n  };\n\n  const addStickyNote = () => {\n    if (newNote.trim()) {\n      setStickyNotes(prev => [...prev, newNote]);\n      setNewNote('');\n    }\n  };\n\n  const deleteStickyNote = (index) => {\n    setStickyNotes(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const addCrazyEightIdea = () => {\n    if (crazyEightIdeas.length < 8) {\n      setCrazyEightIdeas(prev => [...prev, '']);\n    }\n    if (crazyEightIdeas.length === 7) {\n      setIsCrazyEightComplete(true);\n    }\n  };\n\n  const updateCrazyEightIdea = (index, value) => {\n    setCrazyEightIdeas(prev => {\n      const newIdeas = [...prev];\n      newIdeas[index] = value;\n      return newIdeas;\n    });\n  };\n\n  const updateStoryboardSection = (index, value) => {\n    setStoryboardSections(prev => {\n      const newSections = [...prev];\n      newSections[index] = value;\n      return newSections;\n    });\n    checkDayCompletion();\n  };\n\n  const copyConversationLog = () => {\n    const logText = conversationLog.map(entry => `**${entry.isUser ? 'User' : 'Relay'}**: ${entry.text}`).join('\\n');\n    navigator.clipboard.writeText(logText);\n  };\n\n  useEffect(() => {\n    let interval;\n    if (isTimerRunning && timerSeconds > 0) {\n      interval = setInterval(() => {\n        setTimerSeconds(seconds => seconds - 1);\n      }, 1000);\n    } else if (timerSeconds === 0) {\n      setIsTimerRunning(false);\n    }\n    return () => clearInterval(interval);\n  }, [isTimerRunning, timerSeconds]);\n\n  useEffect(() => {\n    checkDayCompletion();\n  }, [sprintData, checkDayCompletion]);\n\n  useEffect(() => {\n    const initialPrompt = `Welcome to Day ${currentDay} of the Design Sprint. ${getCurrentPrompt()} As an expert design sprint coach, provide a brief, encouraging message to start the day. Remind the user of the objectives they need to complete.`;\n    setIsTyping(true);\n    getGPTResponse(initialPrompt).then(response => {\n      const cleanedResponse = response.replace('[SHOW_NEXT_DAY_BUTTON]', '').trim();\n      setFeedback(cleanedResponse);\n      setIsTyping(false);\n      setConversationLog([{ isUser: false, text: cleanedResponse }]);\n    });\n  }, [currentDay, getCurrentPrompt]);\n\n  return (\n    <SprintContainer>\n      <MainContent>\n        <Header>{`Day ${currentDay}: ${sprintGuidance[currentDay].goal}`}</Header>\n        {isTyping ? (\n          <TypingIndicator>\n            <span></span>\n            <span></span>\n            <span></span>\n          </TypingIndicator>\n        ) : (\n          feedback && (\n            <AIMessage>\n              <RelayIcon>Relay :)</RelayIcon> {feedback}\n            </AIMessage>\n          )\n        )}\n        <InputWithSendIcon\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onSubmit={handleSubmit}\n          onKeyPress={(e) => e.key === 'Enter' && !e.shiftKey && handleSubmit()}\n        />\n        {isReadyForNextDay && (\n          <NextDayButton onClick={moveToNextDay}>\n            Ready to move to Day {currentDay + 1}?\n          </NextDayButton>\n        )}\n        {currentDay === 2 && (\n          <>\n            <CopyButton onClick={startTimer}>Start Crazy 8s Timer</CopyButton>\n            <Timer>{Math.floor(timerSeconds / 60)}:{(timerSeconds % 60).toString().padStart(2, '0')}</Timer>\n            {crazyEightIdeas.map((idea, index) => (\n              <CrazyEightInput\n                key={index}\n                value={idea}\n                onChange={(e) => updateCrazyEightIdea(index, e.target.value)}\n                placeholder={`Crazy 8s Idea ${index + 1}`}\n              />\n            ))}\n            {crazyEightIdeas.length < 8 && (\n              <AddIdeaButton onClick={addCrazyEightIdea}>Add Idea</AddIdeaButton>\n            )}\n            {isCrazyEightComplete && (\n              <>\n                <h3>Three-Panel Storyboard</h3>\n                {storyboardSections.map((section, index) => (\n                  <StoryboardSection\n                    key={index}\n                    value={section}\n                    onChange={(e) => updateStoryboardSection(index, e.target.value)}\n                    placeholder={`Describe panel ${index + 1}`}\n                  />\n                ))}\n              </>\n            )}\n          </>\n        )}\n        <StickyNotesSection>\n          <StickyNotePrompt>Add your quick thoughts to the sticky note board:</StickyNotePrompt>\n          <StickyNotesGrid>\n            {stickyNotes.map((note, index) => (\n              <StickyNote key={index}>\n                {note}\n                <DeleteNote onClick={() => deleteStickyNote(index)}>×</DeleteNote>\n              </StickyNote>\n            ))}\n          </StickyNotesGrid>\n          <StickyNoteInput\n            value={newNote}\n            onChange={(e) => setNewNote(e.target.value)}\n            placeholder=\"Add a new note...\"\n            onKeyPress={(e) => e.key === 'Enter' && addStickyNote()}\n          />\n        </StickyNotesSection>\n        <ConversationLog>\n          <h3>Conversation Log (For Development)</h3>\n          <CopyButton onClick={copyConversationLog}>Copy Log</CopyButton>\n          {conversationLog.map((entry, index) => (\n            <LogEntry key={index} isUser={entry.isUser}>\n              <strong>{entry.isUser ? 'User' : 'Relay'}</strong>: {entry.text}\n            </LogEntry>\n          ))}\n        </ConversationLog>\n      </MainContent>\n      <OutputSidebar\n        sprintData={sprintData}\n        currentDay={currentDay}\n      />\n    </SprintContainer>\n  );\n};\n\nexport default DaySprint;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}