{"ast":null,"code":"var _jsxFileName = \"/Users/nickbaumann/Develop/mini-design-sprint/src/components/Monday.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst Container = styled.div`\n  background-color: #1e1e1e;\n  color: #ffffff;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n`;\nconst Header = styled.h1`\n  color: #3c8ce7;\n  font-size: 2.5rem;\n  margin-bottom: 20px;\n`;\nconst Question = styled.h2`\n  font-size: 1.8rem;\n  margin-bottom: 20px;\n  text-align: center;\n`;\nconst Input = styled.input`\n  width: 80%;\n  padding: 15px;\n  margin-bottom: 20px;\n  border: none;\n  border-radius: 25px;\n  font-size: 1rem;\n  background-color: #f8f9fa;\n  color: #1e1e1e;\n`;\nconst Button = styled.button`\n  background-color: #3c8ce7;\n  color: #ffffff;\n  border: none;\n  border-radius: 25px;\n  padding: 15px 30px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #2a6cb0;\n  }\n`;\nconst FeedbackArea = styled.div`\n  background-color: #f8f9fa;\n  color: #1e1e1e;\n  padding: 20px;\n  border-radius: 15px;\n  margin-top: 20px;\n  width: 80%;\n`;\nconst Monday = ({\n  onComplete\n}) => {\n  const [longTermGoal, setLongTermGoal] = useState('');\n  const [criticalQuestions, setCriticalQuestions] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [step, setStep] = useState(1);\n  const handleSubmit = () => {\n    if (step === 1) {\n      // Here you would typically send the input to your AI for feedback\n      setFeedback(`Great long-term goal! Now let's identify some critical questions.`);\n      setStep(2);\n    } else {\n      setFeedback(`Excellent questions! You're ready to move on to Tuesday's tasks.`);\n      setTimeout(() => {\n        onComplete({\n          longTermGoal,\n          criticalQuestions\n        });\n      }, 2000);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Monday: Define & Focus\"), step === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Question, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"What is your long-term goal for this sprint?\"), /*#__PURE__*/React.createElement(Input, {\n    value: longTermGoal,\n    onChange: e => setLongTermGoal(e.target.value),\n    placeholder: \"Enter your long-term goal here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Question, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"What are your critical questions for this sprint?\"), /*#__PURE__*/React.createElement(Input, {\n    value: criticalQuestions,\n    onChange: e => setCriticalQuestions(e.target.value),\n    placeholder: \"Enter your critical questions here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"Submit\"), feedback && /*#__PURE__*/React.createElement(FeedbackArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 20\n    }\n  }, feedback));\n};\nexport default Monday;","map":{"version":3,"names":["React","useState","styled","Container","div","Header","h1","Question","h2","Input","input","Button","button","FeedbackArea","Monday","onComplete","longTermGoal","setLongTermGoal","criticalQuestions","setCriticalQuestions","feedback","setFeedback","step","setStep","handleSubmit","setTimeout","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","value","onChange","e","target","placeholder","onClick"],"sources":["/Users/nickbaumann/Develop/mini-design-sprint/src/components/Monday.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  background-color: #1e1e1e;\n  color: #ffffff;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n`;\n\nconst Header = styled.h1`\n  color: #3c8ce7;\n  font-size: 2.5rem;\n  margin-bottom: 20px;\n`;\n\nconst Question = styled.h2`\n  font-size: 1.8rem;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nconst Input = styled.input`\n  width: 80%;\n  padding: 15px;\n  margin-bottom: 20px;\n  border: none;\n  border-radius: 25px;\n  font-size: 1rem;\n  background-color: #f8f9fa;\n  color: #1e1e1e;\n`;\n\nconst Button = styled.button`\n  background-color: #3c8ce7;\n  color: #ffffff;\n  border: none;\n  border-radius: 25px;\n  padding: 15px 30px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #2a6cb0;\n  }\n`;\n\nconst FeedbackArea = styled.div`\n  background-color: #f8f9fa;\n  color: #1e1e1e;\n  padding: 20px;\n  border-radius: 15px;\n  margin-top: 20px;\n  width: 80%;\n`;\n\nconst Monday = ({ onComplete }) => {\n  const [longTermGoal, setLongTermGoal] = useState('');\n  const [criticalQuestions, setCriticalQuestions] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [step, setStep] = useState(1);\n\n  const handleSubmit = () => {\n    if (step === 1) {\n      // Here you would typically send the input to your AI for feedback\n      setFeedback(`Great long-term goal! Now let's identify some critical questions.`);\n      setStep(2);\n    } else {\n      setFeedback(`Excellent questions! You're ready to move on to Tuesday's tasks.`);\n      setTimeout(() => {\n        onComplete({ longTermGoal, criticalQuestions });\n      }, 2000);\n    }\n  };\n\n  return (\n    <Container>\n      <Header>Monday: Define & Focus</Header>\n      {step === 1 ? (\n        <>\n          <Question>What is your long-term goal for this sprint?</Question>\n          <Input \n            value={longTermGoal}\n            onChange={(e) => setLongTermGoal(e.target.value)}\n            placeholder=\"Enter your long-term goal here...\"\n          />\n        </>\n      ) : (\n        <>\n          <Question>What are your critical questions for this sprint?</Question>\n          <Input \n            value={criticalQuestions}\n            onChange={(e) => setCriticalQuestions(e.target.value)}\n            placeholder=\"Enter your critical questions here...\"\n          />\n        </>\n      )}\n      <Button onClick={handleSubmit}>Submit</Button>\n      {feedback && <FeedbackArea>{feedback}</FeedbackArea>}\n    </Container>\n  );\n};\n\nexport default Monday;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}