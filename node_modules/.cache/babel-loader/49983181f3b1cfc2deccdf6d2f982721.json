{"ast":null,"code":"var _jsxFileName = \"/Users/nickbaumann/Develop/mini-design-sprint/src/components/sprint/DaySprintEngine.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { getGPTResponse } from '../../utils/gptService';\nimport { sprintGuidance } from '../../utils/sprintResources';\nimport OutputSidebar from '../OutputSidebar';\nimport Day1 from './Day1';\nimport Day2 from './Day2';\nimport Day3 from './Day3';\nimport Day4 from './Day4';\nimport Day5 from './Day5';\nimport { SprintContainer, MainContent, Header, AIMessage, RelayIcon, TypingIndicator, StickyNotesSection, StickyNotesGrid, StickyNote, DeleteNote, StickyNoteInput, StickyNotePrompt, ConversationLog, LogEntry, CopyButton } from './CommonComponents';\nconst DaySprintEngine = () => {\n  const [currentDay, setCurrentDay] = useState(1);\n  const [input, setInput] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [sprintData, setSprintData] = useState({});\n  const [stickyNotes, setStickyNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [conversationLog, setConversationLog] = useState([]);\n  const [isReadyForNextDay, setIsReadyForNextDay] = useState(false);\n\n  // Day-specific states\n  const [crazyEightIdeas, setCrazyEightIdeas] = useState(Array(8).fill(''));\n  const [storyboardSections, setStoryboardSections] = useState(['', '', '']);\n  const [prototypeData, setPrototypeData] = useState({\n    coreElements: '',\n    structureFlow: '',\n    interactionsProcesses: ''\n  });\n  const [testingScenario, setTestingScenario] = useState('');\n  const [userInteraction, setUserInteraction] = useState('');\n  const [analysisNotes, setAnalysisNotes] = useState('');\n  const getCurrentPrompt = useCallback(() => sprintGuidance[currentDay].prompt, [currentDay]);\n  const getCurrentObjectives = useCallback(() => sprintGuidance[currentDay].objectives, [currentDay]);\n  const handleSubmit = async () => {\n    if (!input.trim()) return;\n    setIsTyping(true);\n    const userInput = input;\n    setInput('');\n    setConversationLog(prev => [...prev, {\n      isUser: true,\n      text: userInput\n    }]);\n    const prompt = `Day ${currentDay} of Design Sprint. User input: \"${userInput}\". ${getCurrentPrompt()} Provide guidance and suggestions to help the user develop their own ideas. Do not provide direct answers or solutions. Encourage the user to think critically and come up with their own responses.`;\n    try {\n      const response = await getGPTResponse(prompt);\n      const cleanedResponse = response.replace('[SHOW_NEXT_DAY_BUTTON]', '').trim();\n      setFeedback(cleanedResponse);\n      setConversationLog(prev => [...prev, {\n        isUser: false,\n        text: cleanedResponse\n      }]);\n\n      // Update sprint data\n      const currentObjectives = getCurrentObjectives();\n      const currentObjective = currentObjectives[Object.keys(sprintData[currentDay] || {}).length];\n      if (currentObjective) {\n        let summary = await getGPTResponse(`Summarize the following user input for the Design Sprint Day ${currentDay}, objective: ${currentObjective}. User input: \"${userInput}\"`);\n        setSprintData(prev => ({\n          ...prev,\n          [currentDay]: {\n            ...prev[currentDay],\n            [currentObjective]: summary\n          }\n        }));\n      }\n      checkDayCompletion();\n    } catch (error) {\n      console.error(\"Error getting AI response:\", error);\n      setFeedback(\"I'm having trouble providing feedback right now. Please try again.\");\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const moveToNextDay = useCallback(() => {\n    setCurrentDay(prev => Math.min(prev + 1, 5));\n    setFeedback('');\n    setIsReadyForNextDay(false);\n    // Reset day-specific states as needed\n  }, []);\n  const checkDayCompletion = useCallback(() => {\n    // Implement day completion logic here\n  }, [currentDay, sprintData, getCurrentObjectives]);\n  const submitDay2 = useCallback(() => {\n    if (crazyEightIdeas.every(idea => idea.trim() !== '')) {\n      setSprintData(prev => ({\n        ...prev,\n        2: {\n          \"Crazy 8s\": crazyEightIdeas.filter(idea => idea.trim() !== '')\n        }\n      }));\n      moveToNextDay();\n    } else {\n      alert(\"Please complete all 8 ideas before submitting.\");\n    }\n  }, [crazyEightIdeas, moveToNextDay]);\n\n  // Implement submitDay3, submitDay4, submitDay5 similarly\n\n  const addStickyNote = () => {\n    if (newNote.trim()) {\n      setStickyNotes(prev => [...prev, newNote]);\n      setNewNote('');\n    }\n  };\n  const deleteStickyNote = index => {\n    setStickyNotes(prev => prev.filter((_, i) => i !== index));\n  };\n  const copyConversationLog = () => {\n    const logText = conversationLog.map(entry => `**${entry.isUser ? 'User' : 'Relay'}**: ${entry.text}`).join('\\n');\n    navigator.clipboard.writeText(logText);\n  };\n  const conductSimulatedInteraction = async () => {\n    // Implement simulated interaction logic here\n  };\n  const renderCurrentDay = () => {\n    switch (currentDay) {\n      case 1:\n        return /*#__PURE__*/React.createElement(Day1, {\n          handleSubmit: handleSubmit,\n          input: input,\n          setInput: setInput,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 16\n          }\n        });\n      case 2:\n        return /*#__PURE__*/React.createElement(Day2, {\n          crazyEightIdeas: crazyEightIdeas,\n          setCrazyEightIdeas: setCrazyEightIdeas,\n          submitDay: submitDay2,\n          isReadyForNextDay: isReadyForNextDay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 16\n          }\n        });\n      case 3:\n        return /*#__PURE__*/React.createElement(Day3, {\n          storyboardSections: storyboardSections,\n          setStoryboardSections: setStoryboardSections,\n          submitDay: submitDay3,\n          isReadyForNextDay: isReadyForNextDay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 16\n          }\n        });\n      case 4:\n        return /*#__PURE__*/React.createElement(Day4, {\n          prototypeData: prototypeData,\n          setPrototypeData: setPrototypeData,\n          submitDay: submitDay4,\n          isReadyForNextDay: isReadyForNextDay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 16\n          }\n        });\n      case 5:\n        return /*#__PURE__*/React.createElement(Day5, {\n          testingScenario: testingScenario,\n          setTestingScenario: setTestingScenario,\n          userInteraction: userInteraction,\n          setUserInteraction: setUserInteraction,\n          analysisNotes: analysisNotes,\n          setAnalysisNotes: setAnalysisNotes,\n          submitDay: submitDay5,\n          conductSimulatedInteraction: conductSimulatedInteraction,\n          isReadyForNextDay: isReadyForNextDay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 16\n          }\n        });\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/React.createElement(SprintContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, `Day ${currentDay}: ${sprintGuidance[currentDay].goal}`), isTyping ? /*#__PURE__*/React.createElement(TypingIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  })) : feedback && /*#__PURE__*/React.createElement(AIMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RelayIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, \"Relay :)\"), \" \", feedback), renderCurrentDay(), /*#__PURE__*/React.createElement(StickyNotesSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StickyNotePrompt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"Add your quick thoughts to the sticky note board:\"), /*#__PURE__*/React.createElement(StickyNotesGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, stickyNotes.map((note, index) => /*#__PURE__*/React.createElement(StickyNote, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, note, /*#__PURE__*/React.createElement(DeleteNote, {\n    onClick: () => deleteStickyNote(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")))), /*#__PURE__*/React.createElement(StickyNoteInput, {\n    value: newNote,\n    onChange: e => setNewNote(e.target.value),\n    placeholder: \"Add a new note...\",\n    onKeyPress: e => e.key === 'Enter' && addStickyNote(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ConversationLog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, \"Conversation Log (For Development)\"), /*#__PURE__*/React.createElement(CopyButton, {\n    onClick: copyConversationLog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"Copy Log\"), conversationLog.map((entry, index) => /*#__PURE__*/React.createElement(LogEntry, {\n    key: index,\n    isUser: entry.isUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, entry.isUser ? 'User' : 'Relay'), \": \", entry.text)))), /*#__PURE__*/React.createElement(OutputSidebar, {\n    sprintData: sprintData,\n    currentDay: currentDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }));\n};\nexport default DaySprintEngine;","map":{"version":3,"names":["React","useState","useEffect","useCallback","getGPTResponse","sprintGuidance","OutputSidebar","Day1","Day2","Day3","Day4","Day5","SprintContainer","MainContent","Header","AIMessage","RelayIcon","TypingIndicator","StickyNotesSection","StickyNotesGrid","StickyNote","DeleteNote","StickyNoteInput","StickyNotePrompt","ConversationLog","LogEntry","CopyButton","DaySprintEngine","currentDay","setCurrentDay","input","setInput","feedback","setFeedback","sprintData","setSprintData","stickyNotes","setStickyNotes","newNote","setNewNote","isTyping","setIsTyping","conversationLog","setConversationLog","isReadyForNextDay","setIsReadyForNextDay","crazyEightIdeas","setCrazyEightIdeas","Array","fill","storyboardSections","setStoryboardSections","prototypeData","setPrototypeData","coreElements","structureFlow","interactionsProcesses","testingScenario","setTestingScenario","userInteraction","setUserInteraction","analysisNotes","setAnalysisNotes","getCurrentPrompt","prompt","getCurrentObjectives","objectives","handleSubmit","trim","userInput","prev","isUser","text","response","cleanedResponse","replace","currentObjectives","currentObjective","Object","keys","length","summary","checkDayCompletion","error","console","moveToNextDay","Math","min","submitDay2","every","idea","filter","alert","addStickyNote","deleteStickyNote","index","_","i","copyConversationLog","logText","map","entry","join","navigator","clipboard","writeText","conductSimulatedInteraction","renderCurrentDay","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","submitDay","submitDay3","submitDay4","submitDay5","goal","note","key","onClick","value","onChange","e","target","placeholder","onKeyPress"],"sources":["/Users/nickbaumann/Develop/mini-design-sprint/src/components/sprint/DaySprintEngine.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { getGPTResponse } from '../../utils/gptService';\nimport { sprintGuidance } from '../../utils/sprintResources';\nimport OutputSidebar from '../OutputSidebar';\nimport Day1 from './Day1';\nimport Day2 from './Day2';\nimport Day3 from './Day3';\nimport Day4 from './Day4';\nimport Day5 from './Day5';\nimport { SprintContainer, MainContent, Header, AIMessage, RelayIcon, TypingIndicator, StickyNotesSection, StickyNotesGrid, StickyNote, DeleteNote, StickyNoteInput, StickyNotePrompt, ConversationLog, LogEntry, CopyButton } from './CommonComponents';\n\nconst DaySprintEngine = () => {\n  const [currentDay, setCurrentDay] = useState(1);\n  const [input, setInput] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [sprintData, setSprintData] = useState({});\n  const [stickyNotes, setStickyNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [conversationLog, setConversationLog] = useState([]);\n  const [isReadyForNextDay, setIsReadyForNextDay] = useState(false);\n\n  // Day-specific states\n  const [crazyEightIdeas, setCrazyEightIdeas] = useState(Array(8).fill(''));\n  const [storyboardSections, setStoryboardSections] = useState(['', '', '']);\n  const [prototypeData, setPrototypeData] = useState({ coreElements: '', structureFlow: '', interactionsProcesses: '' });\n  const [testingScenario, setTestingScenario] = useState('');\n  const [userInteraction, setUserInteraction] = useState('');\n  const [analysisNotes, setAnalysisNotes] = useState('');\n\n  const getCurrentPrompt = useCallback(() => sprintGuidance[currentDay].prompt, [currentDay]);\n  const getCurrentObjectives = useCallback(() => sprintGuidance[currentDay].objectives, [currentDay]);\n\n  const handleSubmit = async () => {\n    if (!input.trim()) return;\n    setIsTyping(true);\n    const userInput = input;\n    setInput('');\n    setConversationLog(prev => [...prev, { isUser: true, text: userInput }]);\n    \n    const prompt = `Day ${currentDay} of Design Sprint. User input: \"${userInput}\". ${getCurrentPrompt()} Provide guidance and suggestions to help the user develop their own ideas. Do not provide direct answers or solutions. Encourage the user to think critically and come up with their own responses.`;\n    \n    try {\n      const response = await getGPTResponse(prompt);\n      const cleanedResponse = response.replace('[SHOW_NEXT_DAY_BUTTON]', '').trim();\n      setFeedback(cleanedResponse);\n      setConversationLog(prev => [...prev, { isUser: false, text: cleanedResponse }]);\n      \n      // Update sprint data\n      const currentObjectives = getCurrentObjectives();\n      const currentObjective = currentObjectives[Object.keys(sprintData[currentDay] || {}).length];\n      if (currentObjective) {\n        let summary = await getGPTResponse(`Summarize the following user input for the Design Sprint Day ${currentDay}, objective: ${currentObjective}. User input: \"${userInput}\"`);\n        setSprintData(prev => ({\n          ...prev,\n          [currentDay]: {\n            ...prev[currentDay],\n            [currentObjective]: summary\n          }\n        }));\n      }\n      checkDayCompletion();\n    } catch (error) {\n      console.error(\"Error getting AI response:\", error);\n      setFeedback(\"I'm having trouble providing feedback right now. Please try again.\");\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  const moveToNextDay = useCallback(() => {\n    setCurrentDay(prev => Math.min(prev + 1, 5));\n    setFeedback('');\n    setIsReadyForNextDay(false);\n    // Reset day-specific states as needed\n  }, []);\n\n  const checkDayCompletion = useCallback(() => {\n    // Implement day completion logic here\n  }, [currentDay, sprintData, getCurrentObjectives]);\n\n  const submitDay2 = useCallback(() => {\n    if (crazyEightIdeas.every(idea => idea.trim() !== '')) {\n      setSprintData(prev => ({\n        ...prev,\n        2: { \"Crazy 8s\": crazyEightIdeas.filter(idea => idea.trim() !== '') }\n      }));\n      moveToNextDay();\n    } else {\n      alert(\"Please complete all 8 ideas before submitting.\");\n    }\n  }, [crazyEightIdeas, moveToNextDay]);\n\n  // Implement submitDay3, submitDay4, submitDay5 similarly\n\n  const addStickyNote = () => {\n    if (newNote.trim()) {\n      setStickyNotes(prev => [...prev, newNote]);\n      setNewNote('');\n    }\n  };\n\n  const deleteStickyNote = (index) => {\n    setStickyNotes(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const copyConversationLog = () => {\n    const logText = conversationLog.map(entry => `**${entry.isUser ? 'User' : 'Relay'}**: ${entry.text}`).join('\\n');\n    navigator.clipboard.writeText(logText);\n  };\n\n  const conductSimulatedInteraction = async () => {\n    // Implement simulated interaction logic here\n  };\n\n  const renderCurrentDay = () => {\n    switch(currentDay) {\n      case 1:\n        return <Day1 handleSubmit={handleSubmit} input={input} setInput={setInput} />;\n      case 2:\n        return <Day2 \n          crazyEightIdeas={crazyEightIdeas} \n          setCrazyEightIdeas={setCrazyEightIdeas} \n          submitDay={submitDay2}\n          isReadyForNextDay={isReadyForNextDay}\n        />;\n      case 3:\n        return <Day3 \n          storyboardSections={storyboardSections} \n          setStoryboardSections={setStoryboardSections} \n          submitDay={submitDay3}\n          isReadyForNextDay={isReadyForNextDay}\n        />;\n      case 4:\n        return <Day4 \n          prototypeData={prototypeData} \n          setPrototypeData={setPrototypeData} \n          submitDay={submitDay4}\n          isReadyForNextDay={isReadyForNextDay}\n        />;\n      case 5:\n        return <Day5 \n          testingScenario={testingScenario}\n          setTestingScenario={setTestingScenario}\n          userInteraction={userInteraction}\n          setUserInteraction={setUserInteraction}\n          analysisNotes={analysisNotes}\n          setAnalysisNotes={setAnalysisNotes}\n          submitDay={submitDay5}\n          conductSimulatedInteraction={conductSimulatedInteraction}\n          isReadyForNextDay={isReadyForNextDay}\n        />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <SprintContainer>\n      <MainContent>\n        <Header>{`Day ${currentDay}: ${sprintGuidance[currentDay].goal}`}</Header>\n        {isTyping ? (\n          <TypingIndicator>\n            <span></span>\n            <span></span>\n            <span></span>\n          </TypingIndicator>\n        ) : (\n          feedback && (\n            <AIMessage>\n              <RelayIcon>Relay :)</RelayIcon> {feedback}\n            </AIMessage>\n          )\n        )}\n        {renderCurrentDay()}\n        <StickyNotesSection>\n          <StickyNotePrompt>Add your quick thoughts to the sticky note board:</StickyNotePrompt>\n          <StickyNotesGrid>\n            {stickyNotes.map((note, index) => (\n              <StickyNote key={index}>\n                {note}\n                <DeleteNote onClick={() => deleteStickyNote(index)}>×</DeleteNote>\n              </StickyNote>\n            ))}\n          </StickyNotesGrid>\n          <StickyNoteInput\n            value={newNote}\n            onChange={(e) => setNewNote(e.target.value)}\n            placeholder=\"Add a new note...\"\n            onKeyPress={(e) => e.key === 'Enter' && addStickyNote()}\n          />\n        </StickyNotesSection>\n        <ConversationLog>\n          <h3>Conversation Log (For Development)</h3>\n          <CopyButton onClick={copyConversationLog}>Copy Log</CopyButton>\n          {conversationLog.map((entry, index) => (\n            <LogEntry key={index} isUser={entry.isUser}>\n              <strong>{entry.isUser ? 'User' : 'Relay'}</strong>: {entry.text}\n            </LogEntry>\n          ))}\n        </ConversationLog>\n      </MainContent>\n      <OutputSidebar\n        sprintData={sprintData}\n        currentDay={currentDay}\n      />\n    </SprintContainer>\n  );\n};\n\nexport default DaySprintEngine;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}